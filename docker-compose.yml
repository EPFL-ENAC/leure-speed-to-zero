services:
  traefik:
    image: traefik:v2.9
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--entrypoints.web.http.redirections.entryPoint.to=websecure'
      - '--entrypoints.web.http.redirections.entryPoint.scheme=https'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080' # Traefik dashboard
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`lgb-trsc.localhost`)'
      - 'traefik.http.routers.frontend.priority=100'
      - 'traefik.http.routers.frontend.tls=true'
      - 'traefik.http.routers.frontend.rule=PathPrefix(`/`)'
      - 'traefik.http.routers.frontend.middlewares=compress'
      - 'traefik.http.middlewares.compress.compress=true'
      - 'traefik.http.services.frontend.loadbalancer.server.port=80'
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`lgb-trsc.localhost`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.backend.priority=200'
      - 'traefik.http.routers.backend.tls=true'
      - 'traefik.http.services.backend.loadbalancer.server.port=8081'
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - "8081"
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"  # Expose Redis port to host
    volumes:
      - redis_data:/data

volumes:
  redis_data:

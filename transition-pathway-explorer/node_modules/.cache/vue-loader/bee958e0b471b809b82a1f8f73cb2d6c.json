{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/PathwaySelector.vue?vue&type=template&id=65cb9429","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/PathwaySelector.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1707234682978},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"levers-pathways\" } },\n    [\n      _c(\"div\", { attrs: { id: \"levers-pathway-title\" } }, [\n        _vm._v(\"Choose example pathway for Paris: \")\n      ]),\n      _c(\"div\", { attrs: { id: \"levers-pathways-select\" } }, [\n        _c(\n          \"select\",\n          { on: { change: _vm.selectPathway } },\n          [\n            _c(\"option\", {\n              attrs: { disabled: \"\", value: \"\" },\n              domProps: { selected: _vm.appState.pathwayIndex < 0 }\n            }),\n            _vm._l(_vm.examplePathways, function(pathway, index) {\n              return _c(\n                \"option\",\n                {\n                  key: pathway.title,\n                  domProps: {\n                    value: index,\n                    selected: _vm.appState.pathwayIndex == index\n                  }\n                },\n                [_vm._v(_vm._s(pathway.title))]\n              )\n            })\n          ],\n          2\n        ),\n        _c(\"img\", {\n          staticClass: \"info-button\",\n          attrs: { src: \"/img/info.svg\" },\n          on: { click: _vm.openDescription }\n        })\n      ]),\n      _c(\n        \"Modal\",\n        {\n          ref: \"pathwaymodal\",\n          attrs: { \"always-rendered\": true, \"has-close-button\": \"true\" }\n        },\n        [\n          _c(\"div\", { attrs: { id: \"pathway-info\" } }, [\n            _c(\"h2\", { attrs: { id: \"pathway-headline\" } }, [\n              _vm._v(\"Pathways descriptions\")\n            ]),\n            _c(\n              \"div\",\n              { attrs: { id: \"pathway-descriptions\" } },\n              _vm._l(_vm.examplePathways, function(pathway) {\n                return _c(\n                  \"div\",\n                  { key: pathway.title, staticClass: \"pathway-details\" },\n                  [\n                    _c(\"div\", { staticClass: \"pathway-info-title\" }, [\n                      _vm._v(_vm._s(pathway.title) + \":\")\n                    ]),\n                    _c(\"div\", { staticClass: \"pathway-info-description\" }, [\n                      _vm._v(_vm._s(pathway.description))\n                    ])\n                  ]\n                )\n              }),\n              0\n            )\n          ])\n        ]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
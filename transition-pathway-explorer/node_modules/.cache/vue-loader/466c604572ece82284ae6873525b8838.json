{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/lib/PopUpSelect.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/lib/PopUpSelect.vue","mtime":1707210098283},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234520081},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.popupselect {\n  position: absolute;\n  top: 0px;\n  right: 30px;\n  z-index: 1001;\n}\n.popupselect:focus {\n  border: none;\n  outline: none;\n}\n\n.popupselect-inner-container {\n  width: 268px;\n  font-weight: normal;\n  color: #2d2d2d;\n  background-color: white;\n  box-shadow: 0px 0px 6px 0px rgba(0,0,0,0.4);\n}\n.popupselect-title {\n  border-bottom: 1px solid #dcdcdc;\n  padding: 8px;\n}\n.popupselect-items-container {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.popupselect-item {\n  padding: 6px 8px;\n}\n\n.ps-selected {\n  background-color: #dcdcdc;\n}\n",{"version":3,"sources":["PopUpSelect.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"PopUpSelect.vue","sourceRoot":"src/lib","sourcesContent":["<template>\n  <div\n    class=\"popupselect\"\n    v-on:focusout=\"handleFocusOut\"\n    ref=\"popup\"\n    v-on:keydown.up=\"prevItem()\"\n    v-on:keydown.down=\"nextItem()\"\n    v-on:keydown.enter=\"selectItem(selectedIndex)\"\n    :tabindex=\"open ? 0 : -1\"\n  >\n    <div class=\"popupselect-inner-container\" ref=\"container\"\n      v-show=\"open\"\n    >\n      <div v-if=\"title\" class=\"popupselect-title\">{{title}}</div>\n      <div class=\"popupselect-items-container\" ref=\"itemscontainer\">\n        <div v-for=\"(item, ind) in items\" ref=\"items\" :key=\"ind\"\n          class=\"popupselect-item\"\n          :class=\"{'ps-selected': ind===selectedIndex}\"\n          v-on:click=\"selectItem(ind)\"\n          v-on:mouseenter=\"selectedIndex = ind\"\n          v-on:mousemove=\"selectedIndex = ind\"\n        >\n          <span>{{getItemName(ind)}}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'PopUpSelect',\n  props: ['toggleElem', 'items', 'nameProp', 'title', 'callback'],\n  data() {\n    return {\n      open: false,\n      selectedIndex: 0\n    }\n  },\n  methods: {\n    toggleOpen(value) {\n      this.open = value;\n      if(!this.open) {\n        this.selectedIndex = 0;\n        return;\n      } else {\n        this.$refs.popup.focus();\n      }\n    },\n    prevItem() {\n      if(this.selectedIndex > 0) {\n        this.selectedIndex--;\n        this.scrollToSelected();\n      }\n    },\n    nextItem() {\n      if(this.selectedIndex < this.items.length-1) {\n        this.selectedIndex++;\n        this.scrollToSelected();\n      }\n    },\n    selectItem(ind) {\n      if(ind >= 0 && this.items[ind]) {\n        if(this.callback) {\n          this.callback(this.items[ind], ind);\n        }\n      }\n      this.toggleOpen(false);\n    },\n    getItemName(ind) {\n      if(this.nameProp && this.items[ind] && this.items[ind].hasOwnProperty(this.nameProp)) {\n        return this.items[ind][this.nameProp];\n      }\n      return '';\n    },\n    scrollToSelected() {\n      let item = this.$refs.items[this.selectedIndex];\n      if(!item) {\n        return;\n      }\n\n      // the itemsHeight and itemsContHeight could also be cached, but well, there are no other expensive processes running in the background anyways\n      let itemBCR = item.getBoundingClientRect();\n      let itemsHeight = itemBCR.height; // all items have the same height\n\n      let itemTop = itemsHeight*(this.selectedIndex);\n      let itemBottom = itemsHeight*(this.selectedIndex+1);\n\n      let itemsCont = this.$refs.itemscontainer;\n      let itemsContHeight = itemsCont.getBoundingClientRect().height;\n\n      if(itemBottom < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n      if(itemTop > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n      if(itemBottom > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom-itemsContHeight;\n      }\n      if(itemTop < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n\n    },\n    handleFocusOut() {\n      this.toggleOpen(false);\n    }\n  }\n}\n</script>\n\n<style>\n.popupselect {\n  position: absolute;\n  top: 0px;\n  right: 30px;\n  z-index: 1001;\n}\n.popupselect:focus {\n  border: none;\n  outline: none;\n}\n\n.popupselect-inner-container {\n  width: 268px;\n  font-weight: normal;\n  color: #2d2d2d;\n  background-color: white;\n  box-shadow: 0px 0px 6px 0px rgba(0,0,0,0.4);\n}\n.popupselect-title {\n  border-bottom: 1px solid #dcdcdc;\n  padding: 8px;\n}\n.popupselect-items-container {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.popupselect-item {\n  padding: 6px 8px;\n}\n\n.ps-selected {\n  background-color: #dcdcdc;\n}\n</style>\n"]}]}
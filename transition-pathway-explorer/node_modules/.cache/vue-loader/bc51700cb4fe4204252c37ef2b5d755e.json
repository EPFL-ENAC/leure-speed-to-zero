{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/LeversTable.vue?vue&type=template&id=06e5eab6","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/LeversTable.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1707234682978},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { attrs: { id: \"levers-table\" } }, [\n    _c(\"div\", { attrs: { id: \"levers-header\" } }, [\n      _c(\n        \"span\",\n        { staticClass: \"country-name-field levers-column2\" },\n        [\n          _c(\"span\", { staticClass: \"country-name\" }, [\n            _vm._v(_vm._s(_vm.selected[0].name))\n          ]),\n          _vm.selected.length < 2\n            ? _c(\n                \"span\",\n                {\n                  staticClass: \"country-toggle-button\",\n                  class: { deactivated: _vm.appState.countryZoomDisabled },\n                  attrs: { tabindex: \"0\" },\n                  on: {\n                    click: _vm.openCountrySelect,\n                    keydown: function($event) {\n                      if (\n                        !$event.type.indexOf(\"key\") &&\n                        _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                      ) {\n                        return null\n                      }\n                      return _vm.openCountrySelect($event)\n                    }\n                  }\n                },\n                [_c(\"img\", { attrs: { src: \"/img/add.svg\" } })]\n              )\n            : _vm._e(),\n          _c(\"PopUpSelect\", {\n            ref: \"countrySelect\",\n            attrs: {\n              \"toggle-elem\": _vm.$refs.countryToggle,\n              items: _vm.selectableCountries,\n              title: \"Zoom into a country within Europe:\",\n              \"name-prop\": \"name\",\n              callback: _vm.selectCountry\n            }\n          })\n        ],\n        1\n      ),\n      _vm.selected.length === 2\n        ? _c(\"span\", { staticClass: \"country-name-field levers-column3\" }, [\n            _c(\"span\", { staticClass: \"country-name\" }, [\n              _vm._v(_vm._s(_vm.selected[1].name))\n            ]),\n            _c(\n              \"span\",\n              {\n                staticClass: \"country-toggle-button\",\n                class: { deactivated: _vm.appState.countryZoomDisabled },\n                attrs: { tabindex: \"0\" },\n                on: {\n                  click: function($event) {\n                    return _vm.selectCountry(false)\n                  },\n                  keydown: function($event) {\n                    if (\n                      !$event.type.indexOf(\"key\") &&\n                      _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                    ) {\n                      return null\n                    }\n                    return _vm.selectCountry(false)\n                  }\n                }\n              },\n              [_c(\"img\", { attrs: { src: \"/img/remove.svg\" } })]\n            )\n          ])\n        : _vm._e()\n    ]),\n    _c(\n      \"div\",\n      { attrs: { id: \"levers-main\" } },\n      [\n        _c(\"Levers\", {\n          attrs: { selected: _vm.selected, \"app-state\": _vm.appState }\n        })\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
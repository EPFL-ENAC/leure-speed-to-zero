{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/Levers.vue?vue&type=template&id=039f3fd9&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/Levers.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1707234520088},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["\n<div id=\"levers\" class=\"noselect\">\n  <div v-for=\"sector in sectors\" class=\"levers-sector\" :key=\"sector.headline\">\n\n    <div class=\"sector-title\">\n      <span>{{sector.headline}}</span>\n    </div>\n\n    <div v-if=\"sector.groups\" class=\"levers-groups-cont\">\n      <div v-for=\"groupid in sector.groups\" :key=\"groupid\" class=\"levers-group\">\n        <div v-if=\"groups[groupid].title !== sector.headline\"\n          class=\"levers-group-title-cont\"\n          :class=\"{'group-open': !groups[groupid].hidden}\"\n        >\n          <div class=\"levers-group-title levers-column1\" v-on:click=\"toggleGroup(groupid)\">\n            <img src=\"/img/arrow-right.svg\" class=\"levers-group-title-arrow\" :class=\"{rotate90: !groups[groupid].hidden}\">\n            <span>{{groups[groupid].title}}</span>\n          </div>\n\n          <span v-if=\"groups[groupid].range\" v-for=\"(country,counIndex) in selected\" class=\"group-lever-cont\" :key=\"country.id\"\n          :class=\"{'levers-column2': counIndex === 0, 'levers-column3': counIndex === 1}\"\n          >\n            <GroupLever\n              :groupid=\"groupid\" :range=\"groups[groupid].range\" :country=\"country\"\n              :app-state=\"appState\"\n              :deactivated=\"groups[groupid].deactivated\"\n            />\n          </span>\n        </div>\n\n        <!--\n          group control needs to update automatically when one of the inner lever changes, separate component\n\n          needs to be wrapped in ConditionalAutoHeight with v-show on group-visib-status (default is visible) group.isHidden==true\n          countries need to be in the same wrapper, because multiple wrappers could be slightly out of sync\n\n          a group with no own title (groups[groupid].title === sector.headline) is always visible\n        -->\n        <ConditionalAnimateHeight :visible=\"!groups[groupid].hidden || groups[groupid].title === sector.headline || groupHasLeverWithWarning(groupid)\">\n          <div v-for=\"leverid in groups[groupid].levers\" :key=\"leverid\"\n            class=\"levers-group-levers\" v-on:mouseleave=\"deactivateTooltip()\"\n            :class=\"{'lever-highlighted': highlightedLevers[leverid]}\"\n          >\n            <span class=\"levers-title levers-column1\"\n              v-on:mouseenter=\"activateTooltip(leverid)\"\n            >\n              <span v-on:click=\"showLeverInfo(leverid)\" class=\"levers-title-text\">{{levers[leverid].title}}</span>\n              <div v-if=\"tooltips[leverid] && tooltips[leverid].desc\" class=\"lever-descr-tooltip\" :class=\"{'visible': leverid===activeTooltip}\">\n                <div>{{tooltips[leverid].desc}}</div>\n              </div>\n            </span>\n\n            <!-- single controls (int/char) are separate components-->\n            <span v-for=\"(country,countryIndex) in selected\" class=\"single-lever-cont noselect\" :key=\"country.id\"\n              :class=\"{'levers-column2': countryIndex === 0, 'levers-column3': countryIndex === 1,}\"\n            >\n              <SingleLeverNum v-if=\"levers[leverid].type==='num'\"\n                :leverid=\"leverid\" :range=\"levers[leverid].range\" :value=\"country.values[leverid]\" :country=\"country\"\n                :tooltip-visible=\"leverid===activeTooltip\" :activate-tooltip=\"activateTooltip\" :deactivate-tooltip=\"deactivateTooltip\"\n                :app-state=\"appState\"\n                :deactivated=\"groups[groupid].deactivated || (countryIndex > 0 && levers[leverid].isEUOnly)\"\n              />\n              <SingleLeverChar v-if=\"levers[leverid].type==='char'\"\n                :leverid=\"leverid\" :range=\"levers[leverid].range\" :value=\"country.values[leverid]\" :country=\"country\"\n                :tooltip-visible=\"leverid===activeTooltip\" :activate-tooltip=\"activateTooltip\" :deactivate-tooltip=\"deactivateTooltip\"\n                :app-state=\"appState\"\n                :deactivated=\"groups[groupid].deactivated || (countryIndex > 0 && levers[leverid].isEUOnly)\"\n              />\n            </span>\n          </div>\n        </ConditionalAnimateHeight>\n\n      </div>\n    </div>\n\n  </div>\n</div>\n",null]}
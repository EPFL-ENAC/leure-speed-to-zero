{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_food-net-import.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_food-net-import.vue","mtime":1707210098275},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234520081},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.lever-info-chart {\n  height: 400px;\n}\n",{"version":3,"sources":["lever_food-net-import.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA","file":"lever_food-net-import.vue","sourceRoot":"src/components/leverInfos","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Food production</h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>The lever sets the self-sufficiency ratio for each food group.</p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Food production\" chartfilename=\"lever_food-net-import.js\"\n      ></component>\n      <p>It is estimated that around 20 to 25% of global CO2 emissions come from the production of goods that are then consumed in a different country, and food products are no exception. The EU’s self-sufficiency level -i.e. The production over consumption ratio - for crop-based food is approximately 81%, and 103% for livestock-based food.</p>\n      <p>The lever sets the ambition in terms of ‘food self-sufficiency ratio’ for each food group, including direct and indirect (e.g. livestock feed) food consumption.</p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level A</div><p>The self-sufficiency ratio decreases to a level of 70% and 90% for plant based (including cakes) and meat-based food products respectively by 2050 compared to 2015. Consequently, although GHG emissions will decrease in European countries, carbon leakages through the embedded GHG emissions in food products will occur.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level B</div><p>The self-sufficiency ratio decreases to a level of 81% and 100% for plant based (including cakes) and meat-based food products respectively by 2050 compared to 2015. Consequently, although GHG emissions will decrease in European countries, carbon leakages through the embedded GHG emissions in food products will occur.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level C</div><p>The self-sufficiency ratio decreases to a level of 100% and 107% for plant based (including cakes) and meat-based food products by 2050 respectively compared to 2015. Consequently, European countries are net exporters therefore limiting the occurrence of carbon leakages through the embedded GHG emissions in food products.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level D</div><p>The self-sufficiency ratio decreases to a level of 110% and 120% for plant based (including cakes) and meat-based food products by 2050 respectively compared to 2015. Consequently, European countries are net exporters therefore limiting the occurrence of carbon leakages through the embedded GHG emissions in food products.</p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_food-net-import',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_food-net-importChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"]}]}
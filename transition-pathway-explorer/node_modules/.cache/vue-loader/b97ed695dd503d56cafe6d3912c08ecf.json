{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_technology-development.vue?vue&type=style&index=0&id=4280fc63&lang=css","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_technology-development.vue","mtime":1707210098277},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234682978},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.lever-info-chart {\n  height: 400px;\n}\n",{"version":3,"sources":["lever_technology-development.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA","file":"lever_technology-development.vue","sourceRoot":"src/components/leverInfos","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Energy efficiency </h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>This lever sets the decrease in energy consumption through technology based energy efficiency measures.</p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Energy efficiency \" chartfilename=\"lever_technology-development.js\"\n      ></component>\n      <p>A number of technology improvements can be applied across different sectors to increase efficiency and reduce emissions. There are cross-cutting technologies, which are relevant for more than one sector, like increasing boiler efficiency, employing operation &amp; control techniques, using energy efficient motors, using variable speed drivers, reducing compressed air system leaks and efficient load management.\nSome sector specific measures include upgrading steam cracking plants to best practice technology in the chemicals sector, improved furnace design for iron and steel making or the usage of dry systems with preheaters and pre-calciners for the production of cement.</p>\n      <p>Some new technologies require large amounts of energy, such as the use of hydrogen for steel production, which requires a large amount of electric power for the production of hydrogen through electrolysis. The high demand for electricity can be met by using a decarbonised electricity mix. This technology can reduce emissions by up to 95% and decrease energy demand by up to 20%. This higher electricity demand is accounted in the Energy Supply module, where the hydrogen production is modelled. The lever refers to the manufacturing and production sector. </p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level 1</div><p>No major energy efficiency measures in the manufacturing and production sector are observed. Following historic trends the estimated range of increased energy efficiency is between 3 and 8% across sectors.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 2</div><p>Some more ambitious energy efficiency measures in the manufacturing and production sector are observed. The estimated range of increased energy efficiency is between 5% (wood products) and 16% (food, beverages and tobacco) across sectors.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 3</div><p>Ambitious energy efficiency measures in the manufacturing and production sector are observed. The estimated range of increased energy efficiency, especially in energy-intensive sectors, goes from 8% for wood and wood products, 15 to 18% in the iron and steel sector, up to 25% for food beverages and tobacco.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 4</div><p>Most ambitious energy efficiency measures in the manufacturing and production sector are implemented. The estimated range of increased energy efficiency is between 10% (wood products) up to 35% (food, beverages and tobacco). In energy-intensive sectors the range is between 13% and 24%.</p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_technology-development',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_technology-developmentChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"]}]}
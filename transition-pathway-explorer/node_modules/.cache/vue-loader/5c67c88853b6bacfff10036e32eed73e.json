{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/ClimateImpactChart.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/ClimateImpactChart.vue","mtime":1707210098277},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\nimport AreaRange from '../../charts/AreaRange.vue';\n\nexport default {\n  name: 'ClimateImpactChart',\n  components: {AreaRange},\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      infoComponent: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      // the chart definition has to have only one output (the global temperature)\n      let tempOutput = this.outputs[currChart.outputs[0].id];\n\n      if(!tempOutput) {\n        return;\n      }\n\n      // find index of 2100\n      let index2100 = tempOutput.timeAxis.indexOf(2100);\n      let temp2100 = tempOutput.data[\"EU\"][index2100];\n      // console.log('buildData ', tempOutput, currChart.outputs[0], index2100, temp2100);\n\n      this.chart1Data  = {\n        title: currChart.title,\n        unit: currChart.unit,\n        series: currChart.series,\n        temp2100: temp2100\n      }\n    },\n    loadInfoComponent() {\n      let fileName = this.subtab.charts[0]+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //infoComponent = () => import(`../content/${fileName}`)\n      import(`./content/${fileName}`)\n      .then(() => {\n        this.infoComponent = () => import(`./content/${fileName}`);\n      })\n      .catch(() => {\n       // console.log('info component not found');\n      });\n    }\n  },\n  created() {\n    this.loadInfoComponent();\n    this.buildData();\n  },\n  watch: {\n    'appState.lastAPIResponse': function() {\n      this.buildData();\n    }\n  }\n}\n",{"version":3,"sources":["ClimateImpactChart.vue"],"names":[],"mappings":";;;;;;;;AAQA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClimateImpactChart.vue","sourceRoot":"src/components/tabs","sourcesContent":["<template>\n  <div class=\"subtab-content\">\n    <AreaRange v-if=\"chart1Data\" :chart-data=\"chart1Data\"/>\n    <component v-if=\"infoComponent\" :is=\"infoComponent\"/>\n  </div>\n</template>\n\n<script>\nimport AreaRange from '../../charts/AreaRange.vue';\n\nexport default {\n  name: 'ClimateImpactChart',\n  components: {AreaRange},\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      infoComponent: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      // the chart definition has to have only one output (the global temperature)\n      let tempOutput = this.outputs[currChart.outputs[0].id];\n\n      if(!tempOutput) {\n        return;\n      }\n\n      // find index of 2100\n      let index2100 = tempOutput.timeAxis.indexOf(2100);\n      let temp2100 = tempOutput.data[\"EU\"][index2100];\n      // console.log('buildData ', tempOutput, currChart.outputs[0], index2100, temp2100);\n\n      this.chart1Data  = {\n        title: currChart.title,\n        unit: currChart.unit,\n        series: currChart.series,\n        temp2100: temp2100\n      }\n    },\n    loadInfoComponent() {\n      let fileName = this.subtab.charts[0]+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //infoComponent = () => import(`../content/${fileName}`)\n      import(`./content/${fileName}`)\n      .then(() => {\n        this.infoComponent = () => import(`./content/${fileName}`);\n      })\n      .catch(() => {\n       // console.log('info component not found');\n      });\n    }\n  },\n  created() {\n    this.loadInfoComponent();\n    this.buildData();\n  },\n  watch: {\n    'appState.lastAPIResponse': function() {\n      this.buildData();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"]}]}
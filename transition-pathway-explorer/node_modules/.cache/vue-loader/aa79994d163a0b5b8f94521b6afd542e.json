{"remainingRequest":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/src/lib/PopUp.vue?vue&type=style&index=0&id=021d8019&lang=css","dependencies":[{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/src/lib/PopUp.vue","mtime":1707210098283},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234682978},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.popup {\n  position: absolute;\n}\n.popup:focus {\n  outline: none;\n}\n.popup-content {\n  position: relative;\n}\n.popup-close {\n  display: block;\n  width: 20px;\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  cursor: pointer;\n}\n\n",{"version":3,"sources":["PopUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PopUp.vue","sourceRoot":"src/lib","sourcesContent":["<template>\n<div\n  class=\"popup\"\n>\n  <div v-if=\"open\" class=\"popup-content\">\n    <slot/>\n    <img v-if=\"hasCloseButton\" class=\"popup-close\" src=\"/img/close-round.svg\" v-on:click=\"closePopup\"/>\n  </div>\n</div>\n</template>\n\n<script>\n\nexport default {\n  name: 'PopUp',\n  props: ['closingCallback', 'hasCloseButton', 'isOpen', 'exceptionId'],\n  data() {\n    return {\n      open: false\n    }\n  },\n  methods: {\n    clickListener(evt) {\n      if(evt.target.closest('.popup') || evt.target.id === this.exceptionId) {\n        return;\n      }\n      this.closePopup()\n    },\n    togglePopup(evt) {\n      if(this.open) {\n        this.closePopup();\n      } else {\n        this.openPopup(evt);\n      }\n    },\n    openPopup(evt) {\n      // called from outside of this component, not good practice\n      this.open = true;\n      if(evt) {\n        evt.stopPropagation();\n      }\n      window.addEventListener('click', this.clickListener);\n    },\n    closePopup() {\n      this.open = false;\n      window.removeEventListener('click', this.clickListener);\n      if(this.closingCallback) {\n        this.closingCallback();\n      }\n    },\n  },\n  created() {\n    if(this.isOpen) {\n      this.openPopup();\n    }\n  },\n  beforeDestroy() {\n    window.removeEventListener('click', this.clickListener);\n  },\n  watch: {\n    isOpen: function(newValue) {\n      if(newValue) {\n        this.openPopup();\n      } else {\n        this.closePopup();\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.popup {\n  position: absolute;\n}\n.popup:focus {\n  outline: none;\n}\n.popup-content {\n  position: relative;\n}\n.popup-close {\n  display: block;\n  width: 20px;\n  position: absolute;\n  top: 4px;\n  right: 4px;\n  cursor: pointer;\n}\n\n</style>\n"]}]}
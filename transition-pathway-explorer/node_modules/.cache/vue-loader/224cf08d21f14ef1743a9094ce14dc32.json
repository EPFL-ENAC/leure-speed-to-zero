{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/employment/EmploymentChange.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/employment/EmploymentChange.vue","mtime":1707210098278},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234520081},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#employment-change .chart-container {\n  min-height: 600px;\n}\n",{"version":3,"sources":["EmploymentChange.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA","file":"EmploymentChange.vue","sourceRoot":"src/components/tabs/employment","sourcesContent":["<template>\n  <div class=\"subtab-content\" id=\"employment-change\">\n    <BarRangeChart v-if=\"chart1Data && isExamplePathway && !noData\" :chart-data=\"chart1Data\"/>\n\n    <div v-if=\"chart1Data && isExamplePathway && !noData\" class=\"chart-info\">\n      <p>\n        The change in employment is computed in the Employment module (Documentation available here:<br>\n        <a href=\"http://www.european-calculator.eu/documentation\" target=\"_blank\" rel=\"noopener\"><b>http://www.european-calculator.eu/documentation</b></a>\n      </p>\n      <p>\n        The Employment module uses inputs from all the sectors (Agriculture, Transport, Industry, Electricity supply, Buildings, Lifestyles) in order to reconstruct the state of the economy using a macroeconomic model.\n      </p>\n      <p>\n        An increase in employment could be due to high investment, which stimulates economic growth (for instance the construction of power plants or energy-efficient buildings), or to the substitution of energy intensive goods with labour intensive goods (i.e., the transition could foster sectors that require more employees).\n      </p>\n      <p>\n        A decrease in employment could be linked to changes in lifestyles: if individuals decide to travel less, consume less products and energy, then the production also decreases and firms need less labour. In this example, individuals can satisfy their needs with a lower income, which decreases the number of hours they are willing to work.\n      </p>\n    </div>\n\n    <div v-if=\"!isExamplePathway\" class=\"subtab-error\">\n      <p>\n        Data for this tab is only available for example pathways.<br>\n        Please choose an example pathway.\n      </p>\n    </div>\n    <div v-if=\"isExamplePathway && noData\" class=\"subtab-error\">\n      <p>\n        There is no data yet available for this example pathway.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BarRangeChart from '../../../charts/BarRangeChart.vue';\n\nimport * as inputsService from '../../../inputsService.js';\nimport {ExamplePathways} from '../../../config/examplePathways.js';\n\nimport {Countries} from '../../../config/countryData.js';\n\nimport {EmploymentData} from './employmentData.js';\n\nexport default {\n  name: 'EmploymentChange',\n  components: {BarRangeChart},\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      let currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n      // console.log('currentPathwayName ', currentPathwayName);\n\n      if(!EmploymentData[currentPathwayName]) {\n        this.noData = true;\n        return;\n      }\n\n      this.noData = false;\n\n      let data = [];\n      let categories = [];\n\n      // there is only one variable for this chart\n      let variable = currChart.variables[0];\n\n      let output = EmploymentData[currentPathwayName][variable.id];\n\n      Object.keys(output).forEach((countryCode) => {\n        if(countryCode === 'EU') {\n          return;\n        }\n        categories.push(Countries[countryCode].name);\n        let value = parseFloat(output[countryCode]);\n        data.push(\n          value < 0 ? [value,0] : [0,value]\n        );\n      });\n\n      this.chart1Data = {\n        series: [{\n          data: data\n        }],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n    }\n  },\n  created() {\n    setTimeout(() => {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    },0);\n    // inputsService.deactivateCountryZoom();\n\n    if(this.isExamplePathway) {\n      this.buildData();\n    }\n  },\n  beforeDestroy() {\n    inputsService.activateAllGroups();\n  },\n  watch: {\n    'appState.pathwayIndex': function() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if(this.isExamplePathway) {\n        this.buildData();\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n#employment-change .chart-container {\n  min-height: 600px;\n}\n</style>\n"]}]}
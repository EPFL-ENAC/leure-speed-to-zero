{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/employment/WagesPerSkill.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/employment/WagesPerSkill.vue","mtime":1707210098278},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234520081},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#wages-per-skill .tsasbs-cont {\n  max-height: 400px;\n}\n.mobile #wages-per-skill .tsasbs-cont {\n  max-height: none;\n}\n",{"version":3,"sources":["WagesPerSkill.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;AACA;AACA;AACA","file":"WagesPerSkill.vue","sourceRoot":"src/components/tabs/employment","sourcesContent":["<template>\n  <div class=\"subtab-content\" id=\"wages-per-skill\">\n    <div v-if=\"chart1Data && chart2Data && isExamplePathway && !noData\" class=\"tsasbs-cont\">\n      <div class=\"tsasbs-chart\">\n        <BarRangeChart :chart-data=\"chart1Data\"/>\n      </div>\n      <div class=\"tsasbs-chart\">\n        <BarRangeChart :chart-data=\"chart2Data\"/>\n      </div>\n    </div>\n\n    <div v-if=\"chart1Data && chart2Data && isExamplePathway && !noData\" class=\"chart-info\">\n      <p>\n        The workers’ level of education are defined following the International standard classification of education (ISCED):\n      </p>\n      <ul>\n        <li>Unskilled worker: primary and secondary education (ISCED levels 0-4)</li>\n        <li>Skilled worker: tertiary education (ISCED levels 5-8)</li>\n      </ul>\n      <p>\n        The change in employment differs depending on the workers’ level of education. Indeed, decarbonization could for instance foster industries that have a higher demand of skilled workers than of unskilled labour.\n      </p>\n    </div>\n\n    <div v-if=\"!isExamplePathway\" class=\"subtab-error\">\n      <p>\n        Data for this tab is only available for example pathways.<br>\n        Please choose an example pathway.\n      </p>\n    </div>\n    <div v-if=\"isExamplePathway && noData\" class=\"subtab-error\">\n      <p>\n        There is no data yet available for this example pathway.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BarRangeChart from '../../../charts/BarRangeChart.vue';\n\nimport * as inputsService from '../../../inputsService.js';\nimport {ExamplePathways} from '../../../config/examplePathways.js';\n\nimport {EmploymentData} from './employmentData.js';\n\nexport default {\n  name: 'WagesPerSkill',\n  components: {BarRangeChart},\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      chart2Data: undefined,\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    }\n  },\n  methods: {\n    buildData(chartIndex) {\n      let currChart = this.chartDefinitions[this.subtab.charts[chartIndex]];\n\n      let currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n\n      if(!EmploymentData[currentPathwayName]) {\n        this.noData = true;\n        return undefined;\n      }\n\n      this.noData = false;\n\n      let data = [];\n      let categories = [];\n\n      currChart.variables.forEach((variable) => {\n\n        categories.push(variable.title);\n\n        let output = EmploymentData[currentPathwayName][variable.id];\n        let value = parseFloat(output[this.countrycode]);\n        // value = value === 0 ? 0.5 : value;\n        data.push(\n          value < 0 ? [value,0] : [0,value]\n        );\n\n      });\n\n      // console.log(categories,data);\n\n      return {\n        series: [{\n          data: data\n        }],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n    }\n  },\n  created() {\n    // inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    setTimeout(() => {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    },0);\n    // inputsService.deactivateCountryZoom();\n\n    if(this.isExamplePathway) {\n      this.chart1Data = this.buildData(0);\n      this.chart2Data = this.buildData(1);\n    }\n  },\n  beforeDestroy() {\n    inputsService.activateAllGroups();\n  },\n  watch: {\n    'appState.pathwayIndex': function() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if(this.isExamplePathway) {\n        this.chart1Data = this.buildData(0);\n        this.chart2Data = this.buildData(1);\n      }\n    },\n    // important, this component also lets you zoom into a country (dropwdown where the outputs are shown)\n    countrycode: function() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if(this.isExamplePathway) {\n        this.chart1Data = this.buildData(0);\n        this.chart2Data = this.buildData(1);\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n#wages-per-skill .tsasbs-cont {\n  max-height: 400px;\n}\n.mobile #wages-per-skill .tsasbs-cont {\n  max-height: none;\n}\n</style>\n"]}]}
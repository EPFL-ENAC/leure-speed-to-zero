{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/world/EuRowTrade.vue?vue&type=style&index=0&id=270d05c8&lang=css","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/world/EuRowTrade.vue","mtime":1707210098279},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/css-loader/index.js","mtime":1707234519671},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1707234682978},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/postcss-loader/src/index.js","mtime":1707234519895},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#eu-row-trade .chart-container {\n  min-height: 390px;\n  max-height: 600px;\n}\n#eu-row-trade .chart-info {\n  max-width: none;\n}\n#eu-row-trade h3 {\n  text-align: center;\n  margin-bottom: 30px;\n}\n#eu-row-trade table {\n  border-collapse: collapse;\n  margin: 0px auto;\n}\n#eu-row-trade table td {\n  border: 1px solid grey;\n  padding: 5px;\n}\n",{"version":3,"sources":["EuRowTrade.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EuRowTrade.vue","sourceRoot":"src/components/tabs/world","sourcesContent":["<template>\n  <div class=\"subtab-content\" id=\"eu-row-trade\">\n    <BarChart v-if=\"chart1Data && isExamplePathway && !noData\" :chart-data=\"chart1Data\"/>\n\n    <div v-if=\"chart1Data && isExamplePathway && !noData\" class=\"chart-info\">\n      <table>\n        <tbody>\n          <tr v-for=\"entry in chartTableData\" :key=\"entry.title\">\n            <td>{{entry.title}}</td>\n            <td><b>{{entry.value}}</b></td>\n            <td>{{entry.unit}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <NoPathwayNotification\n      :no-data=\"noData\"\n      :app-state=\"appState\"\n    />\n\n  </div>\n</template>\n\n<script>\nimport BarChart from '../../../charts/BarChart.vue';\nimport NoPathwayNotification from './NoPathwayNotification.vue';\n\n\nimport * as inputsService from '../../../inputsService.js';\nimport {ExamplePathways} from '../../../config/examplePathways.js';\n\nimport {WorldData} from './worldData.js';\nimport titlesAndUnits from './titlesAndUnits.json';\n\n\nexport default {\n  name: 'EuRowTrade',\n  components: {\n    BarChart,\n    NoPathwayNotification\n  },\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      chartTableData: [],\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      let currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n\n      if(!WorldData[currentPathwayName]) {\n        this.noData = true;\n        return;\n      }\n\n      this.noData = false;\n\n      // let series = [];\n      let categories = [];\n\n      let dataExports = [];\n      let dataImports = [];\n      let dataTradeBalance = [];\n      /*\n      exports\n      imports\n      trade balance\n      */\n\n\n      currChart.structure.forEach((row) => {\n        categories.push(row.category);\n        dataExports.push(Math.round(WorldData[currentPathwayName][row.variables[0]]));\n        dataImports.push(Math.round(WorldData[currentPathwayName][row.variables[1]]));\n        dataTradeBalance.push(Math.round(WorldData[currentPathwayName][row.variables[2]]));\n      });\n\n      // console.log(categories,data);\n\n      this.chart1Data = {\n        series: [\n          {\n            name: \"Change in Export\",\n            data: dataExports\n          },\n          {\n            name: \"Change in Import\",\n            data: dataImports\n          },\n          {\n            name: \"Change in Trade Balance\",\n            data: dataTradeBalance,\n            type: 'line',\n            lineWidth: 0,\n            color: 'red',\n            states: {\n              hover: {\n                enabled: false,\n                lineWidth: 0\n              }\n            }\n          }\n        ],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n\n\n      //assign data for table beneath the chart\n      let tableData = [];\n\n      currChart.variables.forEach((outputId) => {\n        tableData.push({\n          title: titlesAndUnits[outputId].title,\n          value: Math.round(WorldData[currentPathwayName][outputId]),\n          unit: titlesAndUnits[outputId].unit\n        })\n      });\n\n      this.chartTableData = tableData;\n    }\n  },\n  created() {\n    // inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    setTimeout(() => {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n      inputsService.deactivateCountryZoom();\n    },0);\n    // inputsService.deactivateCountryZoom();\n\n    if(this.isExamplePathway) {\n      this.buildData();\n    }\n  },\n  beforeDestroy() {\n    inputsService.activateAllGroups();\n    inputsService.activateCountryZoom();\n  },\n  watch: {\n    'appState.pathwayIndex': function() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if(this.isExamplePathway) {\n        this.buildData();\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n#eu-row-trade .chart-container {\n  min-height: 390px;\n  max-height: 600px;\n}\n#eu-row-trade .chart-info {\n  max-width: none;\n}\n#eu-row-trade h3 {\n  text-align: center;\n  margin-bottom: 30px;\n}\n#eu-row-trade table {\n  border-collapse: collapse;\n  margin: 0px auto;\n}\n#eu-row-trade table td {\n  border: 1px solid grey;\n  padding: 5px;\n}\n</style>\n"]}]}
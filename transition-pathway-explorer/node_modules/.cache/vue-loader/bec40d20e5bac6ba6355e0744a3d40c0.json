{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/LeverInfoWrapper.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/LeverInfoWrapper.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n\n\nexport default {\n  name: 'LeverInfoWrapper',\n  props: ['leverId'],\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadComponent() {\n      let fileName = this.leverId+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //componentInstance = () => import(`../content/${fileName}`)\n      import(`./leverInfos/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./leverInfos/${fileName}`);\n      })\n      .catch(() => {\n        // console.log('component not found');\n      });\n    }\n  },\n  created() {\n    this.componentInstance = this.loadComponent();\n  }\n}\n",{"version":3,"sources":["LeverInfoWrapper.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LeverInfoWrapper.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component v-if=\"componentInstance\" :is=\"componentInstance\"/>\n</template>\n\n<script>\n\nexport default {\n  name: 'LeverInfoWrapper',\n  props: ['leverId'],\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadComponent() {\n      let fileName = this.leverId+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //componentInstance = () => import(`../content/${fileName}`)\n      import(`./leverInfos/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./leverInfos/${fileName}`);\n      })\n      .catch(() => {\n        // console.log('component not found');\n      });\n    }\n  },\n  created() {\n    this.componentInstance = this.loadComponent();\n  }\n}\n</script>\n\n<style>\n#lever-info {\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  min-height: 0px;\n  flex-direction: column;\n  overflow: hidden;\n}\n#lever-info-title {\n  margin: 0px 0px 0px 0px;\n  padding: 10px 0px;\n  border-bottom: 2px solid lightgrey;\n}\n#lever-info-content {\n  padding: 10px 30px;\n  width: 100%;\n  box-sizing: border-box;\n  overflow-y: auto;\n}\n#lever-info h3 {\n  text-align: center;\n}\n#lever-img-dummy {\n  width: 300px;\n  height: 180px;\n  margin: 15px auto;\n  border: 1px solid lightgrey;\n}\n.lever-info-amibitions {\n  margin: 10px 0px;\n}\n.lever-info-amibitions p {\n  margin: 10px 15px 20px 15px;\n}\n</style>\n"]}]}
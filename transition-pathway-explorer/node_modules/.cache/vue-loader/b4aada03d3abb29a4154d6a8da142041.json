{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/PathwaySelector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/PathwaySelector.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as dataService from '../dataService.js';\nimport * as inputsService from '../inputsService.js';\nimport Modal from '../lib/Modal.vue';\n\nexport default {\n  name: 'Inputs',\n  components: {\n    Modal\n  },\n  props: ['appState'],\n  data() {\n    return {\n    }\n  },\n  created() {\n    this.examplePathways = inputsService.examplePathways;\n  },\n  methods: {\n    openDescription() {\n      this.$refs.pathwaymodal.openModal();\n    },\n    selectPathway(evt) {\n      // the value-attribute can be tampered with by the user, parseInt kind of filters the user-input\n      // state radix for parseInt, because the value can be '0' and JS could choose octal OR decimal in that case\n      var index = parseInt(evt.target.value, 10);\n      if(!Number.isNaN(index) && this.examplePathways[index]) {\n\n        inputsService.setExamplePathway(index);\n\n        // Desktop only\n        if(!this.appState.isMobile) {\n          dataService.rewriteURL(dataService.updateURLParams());\n          dataService.debouncedFetch();\n        }\n\n        // Mobile only\n        if(this.appState.isMobile) {\n          // send availability request\n          dataService.availabilityRequest();\n        }\n\n      }\n    }\n  }\n}\n",{"version":3,"sources":["PathwaySelector.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PathwaySelector.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"levers-pathways\">\n    <div id=\"levers-pathway-title\">Choose example pathway for Paris: </div>\n    <div id=\"levers-pathways-select\">\n      <select v-on:change=\"selectPathway\">\n        <option disabled value=\"\" :selected=\"appState.pathwayIndex < 0\"></option>\n        <option v-for=\"(pathway, index) in examplePathways\"\n          :key=\"pathway.title\"\n          :value=\"index\"\n          :selected=\"appState.pathwayIndex == index\"\n        >{{pathway.title}}</option>\n      </select>\n\n      <img class=\"info-button\" src=\"/img/info.svg\" v-on:click=\"openDescription\">\n    </div>\n\n    <Modal ref=\"pathwaymodal\" :always-rendered=\"true\" has-close-button=\"true\">\n      <div id=\"pathway-info\">\n        <h2 id=\"pathway-headline\">Pathways descriptions</h2>\n        <div id=\"pathway-descriptions\">\n          <div class=\"pathway-details\" v-for=\"pathway in examplePathways\" :key=\"pathway.title\">\n            <div class=\"pathway-info-title\">{{pathway.title}}:</div>\n            <div class=\"pathway-info-description\">{{pathway.description}}</div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n\n  </div>\n</template>\n\n<script>\nimport * as dataService from '../dataService.js';\nimport * as inputsService from '../inputsService.js';\nimport Modal from '../lib/Modal.vue';\n\nexport default {\n  name: 'Inputs',\n  components: {\n    Modal\n  },\n  props: ['appState'],\n  data() {\n    return {\n    }\n  },\n  created() {\n    this.examplePathways = inputsService.examplePathways;\n  },\n  methods: {\n    openDescription() {\n      this.$refs.pathwaymodal.openModal();\n    },\n    selectPathway(evt) {\n      // the value-attribute can be tampered with by the user, parseInt kind of filters the user-input\n      // state radix for parseInt, because the value can be '0' and JS could choose octal OR decimal in that case\n      var index = parseInt(evt.target.value, 10);\n      if(!Number.isNaN(index) && this.examplePathways[index]) {\n\n        inputsService.setExamplePathway(index);\n\n        // Desktop only\n        if(!this.appState.isMobile) {\n          dataService.rewriteURL(dataService.updateURLParams());\n          dataService.debouncedFetch();\n        }\n\n        // Mobile only\n        if(this.appState.isMobile) {\n          // send availability request\n          dataService.availabilityRequest();\n        }\n\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#levers-pathways {\n  background-color: #d4d4d4;\n}\n#levers-pathway-title {\n  padding: 6px 5px 0px 5px;\n  font-weight: bold;\n  color: #808080;\n}\n\n#levers-pathways-select {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 0px 14px 0px;\n}\n#levers-pathways-select select {\n  height: 28px;\n  font-size: 16px;\n  padding: 0px 4px;\n}\n\n.info-button {\n  margin-left: 20px;\n  width: 18px;\n  height: 18px;\n  border-radius: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: serif;\n  border: 1px solid grey;\n  cursor: pointer;\n  background-color: grey;\n  color: white;\n  font-weight: bold;\n}\n#pathway-info {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n}\n#pathway-headline {\n  margin: 20px 0px;\n  padding-left: 20px;\n}\n#pathway-descriptions {\n  flex-grow: 1;\n  overflow: auto;\n  padding: 0px 20px;\n}\n.pathway-details {\n  margin: 20px 0px;\n}\n.pathway-info-title {\n  font-weight: bold;\n  margin-bottom: 3px;\n}\n.pathway-info-description {\n  white-space: pre-wrap;\n}\n</style>\n"]}]}
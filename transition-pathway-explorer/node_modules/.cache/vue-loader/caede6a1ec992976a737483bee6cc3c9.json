{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_str_charging.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_str_charging.vue","mtime":1707210098277},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_str_charging',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_str_chargingChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n",{"version":3,"sources":["lever_str_charging.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"lever_str_charging.vue","sourceRoot":"src/components/leverInfos","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Charging profiles</h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>With this lever the user can influence the charging patterns of electric vehicles, thus influencing when charging happens and its ability to shift demand. Within the lever there are four potential patterns of charging defined: home charging when cars are charged in the after-work hours from home; delayed home charging when cars are charged during the night hours when demand for other forms of electricity consumption is low; home and work charging when cars are charged also during work hours; and finally intelligent charging when the charging time of cars adapts to the availability of extra power on the grid. With the ambition levels, the user can set the ratio of each pattern to share the total electricity need of electric cars.</p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Charging profiles\" chartfilename=\"lever_str_charging.js\"\n      ></component>\n      <p>The number of electric vehicles on the road is forecasted to grow significantly, and thus their impact on the grid and demand profiles is also increasing. Nevertheless, the charging of Electric Vehicles (EVs) can adopt to the daily routine of the users and can be adjusted based on the state of the electricity system, thus with proper incentives EVscan realize significant demand side management potential. This is needed as the widespread adoption of electric vehicles could increase the risk of overloading the power grid by inflating peak demand.</p>\n      <p>The levels are different mixes of charging scenarios. The least ambitious level contains only uncontrolled charging while the ratio of intelligent (i.e. flexible) charging patterns grows with the ambition level.</p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level A</div><p>This scenario considers that most of the EVs will be charged in uncontrolled manner not using fully the storage potential of electric vehicles for flexibility purposes.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level B</div><p>This scenario considers that uncontrolled charging patterns are still dominating the scene but intelligent charging solutions are gaining more opportunity, thus some of the storage potential can be used for flexibility purposes.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level C</div><p>This scenario considers that intelligent charging options and patterns are penetrating more, thus the storage potential of electric vehicles is better exploited for flexibility purposes.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level D</div><p>This scenario considers that most of the EVs will be charged in an intelligent manner and thus making the storage potential of EVs available for flexibility purposes. This requires some additional breakthrough or efforts such as important costs reduction for some technologies, very fast and extended deployment of infrastructures, major technological advances, strong societal changes.</p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_str_charging',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_str_chargingChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"]}]}
{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/world/SectoralTrade.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/world/SectoralTrade.vue","mtime":1707210098279},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport BarChart from \"../../../charts/BarChart.vue\";\nimport NoPathwayNotification from \"./NoPathwayNotification.vue\";\nimport * as inputsService from \"../../../inputsService.js\";\nimport { ExamplePathways } from \"../../../config/examplePathways.js\";\nimport { WorldData } from \"./worldData.js\";\nexport default {\n  name: 'SectoralTrade',\n  components: {\n    BarChart: BarChart,\n    NoPathwayNotification: NoPathwayNotification\n  },\n  props: ['subtab', 'outputs', 'chartDefinitions', 'countrycode', 'appState'],\n  data: function data() {\n    return {\n      chart1Data: undefined,\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    };\n  },\n  methods: {\n    buildData: function buildData() {\n      var currChart = this.chartDefinitions[this.subtab.charts[0]];\n      var currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n\n      if (!WorldData[currentPathwayName]) {\n        this.noData = true;\n        return;\n      }\n\n      this.noData = false;\n      var categories = [];\n      var dataExports = [];\n      var dataImports = [];\n      var dataTradeBalance = [];\n      /*\n      exports\n      imports\n      trade balance\n      */\n\n      currChart.structure.forEach(function (row) {\n        categories.push(row.category);\n        dataExports.push(WorldData[currentPathwayName][row.variables[0]]);\n        dataImports.push(WorldData[currentPathwayName][row.variables[1]]);\n        dataTradeBalance.push(WorldData[currentPathwayName][row.variables[2]]);\n      }); // console.log(categories,data);\n\n      this.chart1Data = {\n        series: [{\n          name: \"Change in Export\",\n          data: dataExports\n        }, {\n          name: \"Change in Import\",\n          data: dataImports\n        }, {\n          name: \"Change in Trade Balance\",\n          data: dataTradeBalance,\n          type: 'line',\n          lineWidth: 0,\n          color: 'red',\n          states: {\n            hover: {\n              enabled: false,\n              lineWidth: 0\n            }\n          }\n        }],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n    }\n  },\n  created: function created() {\n    // inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    setTimeout(function () {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n      inputsService.deactivateCountryZoom();\n    }, 0); // inputsService.deactivateCountryZoom();\n\n    if (this.isExamplePathway) {\n      this.buildData();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    inputsService.activateAllGroups();\n    inputsService.activateCountryZoom();\n  },\n  watch: {\n    'appState.pathwayIndex': function appStatePathwayIndex() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n\n      if (this.isExamplePathway) {\n        this.buildData();\n      }\n    }\n  }\n};",{"version":3,"sources":["SectoralTrade.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"subtab-content\">\n    <BarChart v-if=\"chart1Data && isExamplePathway && !noData\" :chart-data=\"chart1Data\"/>\n\n    <NoPathwayNotification\n      :no-data=\"noData\"\n      :app-state=\"appState\"\n    />\n\n  </div>\n</template>\n\n<script>\nimport BarChart from '../../../charts/BarChart.vue';\nimport NoPathwayNotification from './NoPathwayNotification.vue';\n\nimport * as inputsService from '../../../inputsService.js';\nimport {ExamplePathways} from '../../../config/examplePathways.js';\n\nimport {WorldData} from './worldData.js';\n\nexport default {\n  name: 'SectoralTrade',\n  components: {\n    BarChart,\n    NoPathwayNotification\n  },\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      let currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n\n      if(!WorldData[currentPathwayName]) {\n        this.noData = true;\n        return;\n      }\n\n      this.noData = false;\n\n      let categories = [];\n\n      let dataExports = [];\n      let dataImports = [];\n      let dataTradeBalance = [];\n      /*\n      exports\n      imports\n      trade balance\n      */\n\n\n      currChart.structure.forEach((row) => {\n        categories.push(row.category);\n        dataExports.push(WorldData[currentPathwayName][row.variables[0]]);\n        dataImports.push(WorldData[currentPathwayName][row.variables[1]]);\n        dataTradeBalance.push(WorldData[currentPathwayName][row.variables[2]]);\n      });\n\n      // console.log(categories,data);\n\n      this.chart1Data = {\n        series: [\n          {\n            name: \"Change in Export\",\n            data: dataExports\n          },\n          {\n            name: \"Change in Import\",\n            data: dataImports\n          },\n          {\n            name: \"Change in Trade Balance\",\n            data: dataTradeBalance,\n            type: 'line',\n            lineWidth: 0,\n            color: 'red',\n            states: {\n              hover: {\n                enabled: false,\n                lineWidth: 0\n              }\n            }\n          }\n        ],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n\n    }\n  },\n  created() {\n    // inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    setTimeout(() => {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n      inputsService.deactivateCountryZoom();\n    },0);\n    // inputsService.deactivateCountryZoom();\n\n    if(this.isExamplePathway) {\n      this.buildData();\n    }\n  },\n  beforeDestroy() {\n    inputsService.activateAllGroups();\n    inputsService.activateCountryZoom();\n  },\n  watch: {\n    'appState.pathwayIndex': function() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if(this.isExamplePathway) {\n        this.buildData();\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"],"sourceRoot":"src/components/tabs/world"}]}
{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_freight_vehicle-efficiency_new.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_freight_vehicle-efficiency_new.vue","mtime":1707210098275},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChartLeverInfo from \"../../charts/LineChartLeverInfo.vue\";\nexport default {\n  name: 'lever_freight_vehicle-efficiency_new',\n  components: {\n    LineChartLeverInfo: LineChartLeverInfo\n  },\n  data: function data() {\n    return {\n      componentInstance: undefined\n    };\n  },\n  methods: {\n    loadChartComponent: function loadChartComponent() {\n      var _this = this;\n      var fileName = 'lever_freight_vehicle-efficiency_newChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(\"./chartExceptions/\".concat(fileName)).then(function () {\n        _this.componentInstance = function () {\n          return import(\"./chartExceptions/\".concat(fileName));\n        };\n      }).catch(function () {\n        _this.componentInstance = LineChartLeverInfo;\n      });\n    }\n  },\n  created: function created() {\n    this.loadChartComponent();\n  }\n};",{"version":3,"sources":["lever_freight_vehicle-efficiency_new.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,kBAAA;AAEA,eAAA;EACA,IAAA,EAAA,sCAAA;EACA,UAAA,EAAA;IACA,kBAAA,EAAA;EACA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA;MACA,iBAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,kBAAA,WAAA,mBAAA,EAAA;MAAA,IAAA,KAAA;MACA,IAAA,QAAA,GAAA,+CAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAA,sBAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CACA,IAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA;UAAA,OAAA,MAAA,sBAAA,MAAA,CAAA,QAAA,CAAA,CAAA;QAAA;MACA,CAAA,CAAA,CACA,KAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA,kBAAA;MACA,CAAA,CAAA;IACA;EACA,CAAA;EACA,OAAA,WAAA,QAAA,EAAA;IACA,IAAA,CAAA,kBAAA,CAAA,CAAA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Freight efficiency</h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>This lever sets the efficiency of freight vehicles and controls efficiency improvements for all vehicle types (both fossil fuel-powered and low-carbon). </p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Freight efficiency\" chartfilename=\"lever_freight_vehicle-efficiency_new.js\"\n      ></component>\n      <p>This lever applies to all vehicles, and links with other choices made, especially in terms of technology, occupancy and load. There are several ways to enhance vehicle efficiency, such as improving the engine or aerodynamic performance of vehicles, using lighter materials to reduce the ratio weight per person, using less carbon intensive fuel or changes in driving behaviour (for example, braking less or travelling at lower speeds).</p>\n      <p>For freight transport, in 2011 light-duty vehicles had an efficiency of 10 litres gasoline equivalent (lge) per 100 km and heavy-duty vehicle efficiency was 32 lge per 100 km. The average global rate of improvement is 1-2% per year. International shipping is more efficient in fossil fuel use and is also compatible with biofuels. Recently, in 2018, the EC drafted the first ever truck CO2 emission standards that plans to reduce truck-related emissions by improving efficiency and increase the share of zero-emission vehicles in the truck fleet.</p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level 1</div><p>By 2050, trucks energy consumption (MJ/tkm) decreases by 10%, rail energy consumption by 10%, aviation and shipping energy consumption by 5%. </p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 2</div><p>By 2050, trucks energy consumption (MJ/tkm) decreases by 17%, rail energy consumption by 13%, aviation energy consumption by 7% and shipping energy consumption by 13%. </p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 3</div><p>By 2050, trucks energy consumption (MJ/tkm) decreases by 33%, rail energy consumption by 27%, aviation energy consumption by 15% and shipping energy consumption by 30%. </p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 4</div><p>By 2050, trucks energy consumption (MJ/tkm) decreases by 50%, rail energy consumption by 40%, aviation energy consumption by 22% and shipping energy consumption by 40%. </p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_freight_vehicle-efficiency_new',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_freight_vehicle-efficiency_newChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"],"sourceRoot":"src/components/leverInfos"}]}
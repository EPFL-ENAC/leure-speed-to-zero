{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_capacity_nuclear.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_capacity_nuclear.vue","mtime":1707210098273},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LineChartLeverInfo from \"../../charts/LineChartLeverInfo.vue\";\nexport default {\n  name: 'lever_capacity_nuclear',\n  components: {\n    LineChartLeverInfo: LineChartLeverInfo\n  },\n  data: function data() {\n    return {\n      componentInstance: undefined\n    };\n  },\n  methods: {\n    loadChartComponent: function loadChartComponent() {\n      var _this = this;\n\n      var fileName = 'lever_capacity_nuclearChart.vue'; // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n\n      import(\"./chartExceptions/\".concat(fileName)).then(function () {\n        _this.componentInstance = function () {\n          return import(\"./chartExceptions/\".concat(fileName));\n        };\n      }).catch(function () {\n        _this.componentInstance = LineChartLeverInfo;\n      });\n    }\n  },\n  created: function created() {\n    this.loadChartComponent();\n  }\n};",{"version":3,"sources":["lever_capacity_nuclear.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,iBAAA,EAAA;AADA,KAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,gCACA;AAAA;;AACA,UAAA,QAAA,GAAA,iCAAA,CADA,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,yCAAA,QAAA,GACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,iBAAA,GAAA;AAAA,iBAAA,mCAAA,QAAA,EAAA;AAAA,SAAA;AACA,OAHA,EAIA,KAJA,CAIA,YAAA;AACA,QAAA,KAAA,CAAA,iBAAA,GAAA,kBAAA;AACA,OANA;AAOA;AAlBA,GAVA;AA8BA,EAAA,OA9BA,qBA8BA;AACA,SAAA,kBAAA;AACA;AAhCA,CAAA","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Nuclear</h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>This lever sets the phase-out and new capacities of nuclear power plants.</p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Nuclear\" chartfilename=\"lever_capacity_nuclear.js\"\n      ></component>\n      <p>Nuclear power plants using the process of nuclear fission, are a controversial source of electricity, as the large scale decarbonisation potential is coupled with concerns of operational safety and waste management. According to the World Nuclear Industry Status Report, in 2015 128 reactors were in operation in the EU, of which almost half (58) were in France. In total, these 128 reactors have a capacity of 119.7 GW generating roughly a quarter of the electricity production in the EU. Nuclear power generation can significantly contribute to decarbonisation, offering emission free baseload power. However, due to different concerns, some countries have decided not to use it or to phase-out existing capacities. Through the settings, the user can choose the future of the base year nuclear generation capacities depending on the policy of the country. The impact of timing on phase-out and expansion can be investigated on pathways. Regardless of the nuclear policies of countries, level 1 equals to the lowest capacity or the quickest phase-out/slowest expansion, while level 4 pushes for the highest amount of nuclear as soon as possible.</p>\n      <p>Due to ageing and phase-out policies, nuclear power generation is foreseen to decrease further in the EU, however, policies and plans vary between Member States. The number of reactors in operation has been decreasing since 1989 in the EU, whereas the vast majority of the facilities, 109 units or 85%, are located in eight of the western countries, and only 19 are in the six newer member states using nuclear power.</p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level 1</div><p>Nuclear is either phased out in countries or not maintained, i.e. closed plants are not replaced by new ones.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 2</div><p>Delayed nuclear phase-out and in those countries where new nuclear power plants are planned, destined to replace old capacities, these are delayed or even cancelled.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 3</div><p>Delayed nuclear phase-out and in those countries where new nuclear power plants are planned to replace old capacities, these are delayed.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 4</div><p>10+ years delayed nuclear phase-out and, in those countries where new nuclear power plants are planned, these are started in time, which in case of some countries even allows expansion of nuclear capacities.</p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_capacity_nuclear',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_capacity_nuclearChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"],"sourceRoot":"src/components/leverInfos"}]}
{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/world/SectoralTrade.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/world/SectoralTrade.vue","mtime":1707210098279},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BarChart from \"../../../charts/BarChart.vue\";\nimport NoPathwayNotification from \"./NoPathwayNotification.vue\";\nimport * as inputsService from \"../../../inputsService.js\";\nimport { ExamplePathways } from \"../../../config/examplePathways.js\";\nimport { WorldData } from \"./worldData.js\";\nexport default {\n  name: 'SectoralTrade',\n  components: {\n    BarChart: BarChart,\n    NoPathwayNotification: NoPathwayNotification\n  },\n  props: ['subtab', 'outputs', 'chartDefinitions', 'countrycode', 'appState'],\n  data: function data() {\n    return {\n      chart1Data: undefined,\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    };\n  },\n  methods: {\n    buildData: function buildData() {\n      var currChart = this.chartDefinitions[this.subtab.charts[0]];\n      var currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n      if (!WorldData[currentPathwayName]) {\n        this.noData = true;\n        return;\n      }\n      this.noData = false;\n      var categories = [];\n      var dataExports = [];\n      var dataImports = [];\n      var dataTradeBalance = [];\n      /*\n      exports\n      imports\n      trade balance\n      */\n\n      currChart.structure.forEach(function (row) {\n        categories.push(row.category);\n        dataExports.push(WorldData[currentPathwayName][row.variables[0]]);\n        dataImports.push(WorldData[currentPathwayName][row.variables[1]]);\n        dataTradeBalance.push(WorldData[currentPathwayName][row.variables[2]]);\n      });\n\n      // console.log(categories,data);\n\n      this.chart1Data = {\n        series: [{\n          name: \"Change in Export\",\n          data: dataExports\n        }, {\n          name: \"Change in Import\",\n          data: dataImports\n        }, {\n          name: \"Change in Trade Balance\",\n          data: dataTradeBalance,\n          type: 'line',\n          lineWidth: 0,\n          color: 'red',\n          states: {\n            hover: {\n              enabled: false,\n              lineWidth: 0\n            }\n          }\n        }],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n    }\n  },\n  created: function created() {\n    // inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    setTimeout(function () {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n      inputsService.deactivateCountryZoom();\n    }, 0);\n    // inputsService.deactivateCountryZoom();\n\n    if (this.isExamplePathway) {\n      this.buildData();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    inputsService.activateAllGroups();\n    inputsService.activateCountryZoom();\n  },\n  watch: {\n    'appState.pathwayIndex': function appStatePathwayIndex() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if (this.isExamplePathway) {\n        this.buildData();\n      }\n    }\n  }\n};",{"version":3,"sources":["SectoralTrade.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"subtab-content\">\n    <BarChart v-if=\"chart1Data && isExamplePathway && !noData\" :chart-data=\"chart1Data\"/>\n\n    <NoPathwayNotification\n      :no-data=\"noData\"\n      :app-state=\"appState\"\n    />\n\n  </div>\n</template>\n\n<script>\nimport BarChart from '../../../charts/BarChart.vue';\nimport NoPathwayNotification from './NoPathwayNotification.vue';\n\nimport * as inputsService from '../../../inputsService.js';\nimport {ExamplePathways} from '../../../config/examplePathways.js';\n\nimport {WorldData} from './worldData.js';\n\nexport default {\n  name: 'SectoralTrade',\n  components: {\n    BarChart,\n    NoPathwayNotification\n  },\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      isExamplePathway: this.appState.pathwayIndex > -1,\n      noData: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      let currentPathwayName = ExamplePathways[this.appState.pathwayIndex].title;\n\n      if(!WorldData[currentPathwayName]) {\n        this.noData = true;\n        return;\n      }\n\n      this.noData = false;\n\n      let categories = [];\n\n      let dataExports = [];\n      let dataImports = [];\n      let dataTradeBalance = [];\n      /*\n      exports\n      imports\n      trade balance\n      */\n\n\n      currChart.structure.forEach((row) => {\n        categories.push(row.category);\n        dataExports.push(WorldData[currentPathwayName][row.variables[0]]);\n        dataImports.push(WorldData[currentPathwayName][row.variables[1]]);\n        dataTradeBalance.push(WorldData[currentPathwayName][row.variables[2]]);\n      });\n\n      // console.log(categories,data);\n\n      this.chart1Data = {\n        series: [\n          {\n            name: \"Change in Export\",\n            data: dataExports\n          },\n          {\n            name: \"Change in Import\",\n            data: dataImports\n          },\n          {\n            name: \"Change in Trade Balance\",\n            data: dataTradeBalance,\n            type: 'line',\n            lineWidth: 0,\n            color: 'red',\n            states: {\n              hover: {\n                enabled: false,\n                lineWidth: 0\n              }\n            }\n          }\n        ],\n        title: currChart.title,\n        unit: currChart.unit,\n        categories: categories\n      };\n\n    }\n  },\n  created() {\n    // inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n    setTimeout(() => {\n      inputsService.deactivateGroups(Object.keys(inputsService.leverGroups));\n      inputsService.deactivateCountryZoom();\n    },0);\n    // inputsService.deactivateCountryZoom();\n\n    if(this.isExamplePathway) {\n      this.buildData();\n    }\n  },\n  beforeDestroy() {\n    inputsService.activateAllGroups();\n    inputsService.activateCountryZoom();\n  },\n  watch: {\n    'appState.pathwayIndex': function() {\n      this.isExamplePathway = this.appState.pathwayIndex > -1;\n      if(this.isExamplePathway) {\n        this.buildData();\n      }\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"],"sourceRoot":"src/components/tabs/world"}]}
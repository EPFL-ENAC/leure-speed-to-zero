{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/materials/MineralAvailability.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/materials/MineralAvailability.vue","mtime":1707210098279},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BarRangeChart from \"../../../charts/BarRangeChart.vue\";\nexport default {\n  name: 'MineralAvailability',\n  components: {\n    BarRangeChart: BarRangeChart\n  },\n  props: ['subtab', 'outputs', 'chartDefinitions', 'countrycode', 'appState'],\n  data: function data() {\n    return {\n      chart1Data: undefined\n    };\n  },\n  methods: {\n    buildData: function buildData() {\n      var _this = this;\n      var currChart = this.chartDefinitions[this.subtab.charts[0]];\n      var data = [];\n      var categories = [];\n      currChart.outputs.forEach(function (outp) {\n        if (!_this.outputs[outp.id] || !_this.outputs[outp.id].data) {\n          return;\n        }\n        var title = _this.outputs[outp.id].title ? _this.outputs[outp.id].title : outp.id;\n        categories.push(title);\n        var outputData = _this.outputs[outp.id].data[_this.countrycode];\n        var value = outputData[outputData.length - 1];\n        data.push(\n        // Range charts in Highcharts cover a range, so two values are needed\n        value < 0 ? [value, 0] : [0, value]);\n      });\n\n      // console.log(categories,data);\n      if (data.length) {\n        this.chart1Data = {\n          series: [{\n            data: data\n          }],\n          title: currChart.title,\n          unit: currChart.unit,\n          categories: categories\n        };\n      }\n    }\n  },\n  created: function created() {\n    this.buildData();\n  },\n  watch: {\n    'appState.lastAPIResponse': function appStateLastAPIResponse() {\n      this.buildData();\n    },\n    countrycode: function countrycode() {\n      this.buildData();\n    }\n  }\n};",{"version":3,"sources":["MineralAvailability.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,OAAA,aAAA;AAEA,eAAA;EACA,IAAA,EAAA,qBAAA;EACA,UAAA,EAAA;IAAA,aAAA,EAAA;EAAA,CAAA;EACA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,UAAA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA;MACA,UAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,SAAA,WAAA,UAAA,EAAA;MAAA,IAAA,KAAA;MACA,IAAA,SAAA,GAAA,IAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;MAEA,IAAA,IAAA,GAAA,EAAA;MACA,IAAA,UAAA,GAAA,EAAA;MAEA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;QAEA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,IAAA,EAAA;UACA;QACA;QAEA,IAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,KAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,KAAA,GAAA,IAAA,CAAA,EAAA;QAEA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA;QAEA,IAAA,UAAA,GAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA;QAEA,IAAA,KAAA,GAAA,UAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,CAAA;QACA,IAAA,CAAA,IAAA;QACA;QACA,KAAA,GAAA,CAAA,GAAA,CAAA,KAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,CACA,CAAA;MAEA,CAAA,CAAA;;MAEA;MACA,IAAA,IAAA,CAAA,MAAA,EAAA;QACA,IAAA,CAAA,UAAA,GAAA;UACA,MAAA,EAAA,CAAA;YACA,IAAA,EAAA;UACA,CAAA,CAAA;UACA,KAAA,EAAA,SAAA,CAAA,KAAA;UACA,IAAA,EAAA,SAAA,CAAA,IAAA;UACA,UAAA,EAAA;QACA,CAAA;MACA;IACA;EACA,CAAA;EACA,OAAA,WAAA,QAAA,EAAA;IACA,IAAA,CAAA,SAAA,CAAA,CAAA;EACA,CAAA;EACA,KAAA,EAAA;IACA,0BAAA,EAAA,SAAA,wBAAA,EAAA;MACA,IAAA,CAAA,SAAA,CAAA,CAAA;IACA,CAAA;IACA,WAAA,EAAA,SAAA,YAAA,EAAA;MACA,IAAA,CAAA,SAAA,CAAA,CAAA;IACA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <div class=\"subtab-content\">\n    <BarRangeChart v-if=\"chart1Data\" :chart-data=\"chart1Data\"/>\n\n    <!-- <div class=\"chart-info\">\n      <p>\n        Each sector is affected directly and indirectly by the transition. For instance, if individuals purchase less cars (group of levers “Key behaviours - Travel”), then the industrial production of vehicles decrease (direct effect).\n      </p>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport BarRangeChart from '../../../charts/BarRangeChart.vue';\n\nexport default {\n  name: 'MineralAvailability',\n  components: {BarRangeChart},\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      let data = [];\n      let categories = [];\n\n      currChart.outputs.forEach((outp) => {\n\n        if(!this.outputs[outp.id] || !this.outputs[outp.id].data) {\n          return;\n        }\n\n        let title = this.outputs[outp.id].title ? this.outputs[outp.id].title : outp.id;\n\n        categories.push(title);\n\n        let outputData = this.outputs[outp.id].data[this.countrycode];\n\n        let value = outputData[outputData.length-1];\n        data.push(\n          // Range charts in Highcharts cover a range, so two values are needed\n          value < 0 ? [value,0] : [0,value]\n        );\n\n      });\n\n      // console.log(categories,data);\n      if(data.length) {\n        this.chart1Data = {\n          series: [{\n            data: data\n          }],\n          title: currChart.title,\n          unit: currChart.unit,\n          categories: categories\n        };\n      }\n    }\n  },\n  created() {\n    this.buildData();\n  },\n  watch: {\n    'appState.lastAPIResponse': function() {\n      this.buildData();\n    },\n    countrycode: function() {\n      this.buildData();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"],"sourceRoot":"src/components/tabs/materials"}]}
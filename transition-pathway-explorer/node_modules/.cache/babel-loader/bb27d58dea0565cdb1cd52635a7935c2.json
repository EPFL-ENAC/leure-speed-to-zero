{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/charts/LineChartLeverInfo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/charts/LineChartLeverInfo.vue","mtime":1707210098267},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport highcharts from \"highcharts\";\nimport seriesLabels from \"highcharts/modules/series-label\";\nexport default {\n  name: 'LineChartLeverInfo',\n  props: ['chartTitle', 'chartfilename'],\n  data: function data() {\n    return {\n      chartData: undefined,\n      isEmpty: false\n    };\n  },\n  methods: {\n    loadChartData: function loadChartData() {\n      var _this = this;\n      var fileName = this.chartfilename;\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      import(\"../components/leverInfoCharts/\".concat(fileName)).then(function (module) {\n        _this.chartData = module.chartData;\n        _this.buildChart();\n      }).catch(function () {\n        // console.log(err);\n        _this.isEmpty = true;\n      });\n    },\n    buildChart: function buildChart() {\n      var container = this.$refs.chart;\n      seriesLabels(highcharts);\n      this.chart = new highcharts.Chart({\n        chart: {\n          renderTo: container,\n          type: 'line',\n          spacingBottom: 30\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: this.chartTitle + ' - Ambition levels'\n        },\n        xAxis: {\n          tickmarkPlacement: 'on',\n          title: {\n            enabled: false\n          },\n          tickInterval: 5 // 5 years\n        },\n        yAxis: {\n          title: {\n            text: this.chartData.unit\n          }\n        },\n        tooltip: {\n          split: true\n        },\n        series: this.chartData.series,\n        caption: {\n          text: \"<b>\" + this.chartData.caption + \"</b>\",\n          align: 'center'\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.loadChartData(); // called on mounted, because it calls buildChart() which relies on a $ref\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n};",{"version":3,"sources":["LineChartLeverInfo.vue"],"names":[],"mappings":";;;;;;;AAOA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,YAAA,MAAA,iCAAA;AAEA,eAAA;EACA,IAAA,EAAA,oBAAA;EACA,KAAA,EAAA,CAAA,YAAA,EAAA,eAAA,CAAA;EACA,IAAA,EAAA,SAAA,KAAA,EAAA;IACA,OAAA;MACA,SAAA,EAAA,SAAA;MACA,OAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,aAAA,WAAA,cAAA,EAAA;MAAA,IAAA,KAAA;MACA,IAAA,QAAA,GAAA,IAAA,CAAA,aAAA;;MAEA;MACA,MAAA,kCAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CACA,IAAA,CAAA,UAAA,MAAA,EAAA;QACA,KAAA,CAAA,SAAA,GAAA,MAAA,CAAA,SAAA;QACA,KAAA,CAAA,UAAA,CAAA,CAAA;MACA,CAAA,CAAA,CACA,KAAA,CAAA,YAAA;QACA;QACA,KAAA,CAAA,OAAA,GAAA,IAAA;MACA,CAAA,CAAA;IACA,CAAA;IACA,UAAA,WAAA,WAAA,EAAA;MACA,IAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA;MAEA,YAAA,CAAA,UAAA,CAAA;MAEA,IAAA,CAAA,KAAA,GAAA,IAAA,UAAA,CAAA,KAAA,CAAA;QACA,KAAA,EAAA;UACA,QAAA,EAAA,SAAA;UACA,IAAA,EAAA,MAAA;UACA,aAAA,EAAA;QACA,CAAA;QACA,OAAA,EAAA;UACA,OAAA,EAAA;QACA,CAAA;QACA,KAAA,EAAA;UACA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA;QACA,CAAA;QACA,KAAA,EAAA;UACA,iBAAA,EAAA,IAAA;UACA,KAAA,EAAA;YACA,OAAA,EAAA;UACA,CAAA;UACA,YAAA,EAAA,CAAA,CAAA;QACA,CAAA;QACA,KAAA,EAAA;UACA,KAAA,EAAA;YACA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;UACA;QACA,CAAA;QACA,OAAA,EAAA;UACA,KAAA,EAAA;QACA,CAAA;QACA,MAAA,EAAA,IAAA,CAAA,SAAA,CAAA,MAAA;QACA,OAAA,EAAA;UACA,IAAA,EAAA,KAAA,GAAA,IAAA,CAAA,SAAA,CAAA,OAAA,GAAA,MAAA;UACA,KAAA,EAAA;QACA;MACA,CAAA,CAAA;IACA;EACA,CAAA;EACA,OAAA,WAAA,QAAA,EAAA;IACA,IAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA;EACA,CAAA;EACA,aAAA,WAAA,cAAA,EAAA;IACA,IAAA,IAAA,CAAA,KAAA,EAAA;MACA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA;IACA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <div class=\"chart-container\" :class=\"{'lever-info-chart-empty': isEmpty}\">\n    <div class=\"chart\" ref=\"chart\"></div>\n  </div>\n</template>\n\n<script>\nimport highcharts from \"highcharts\";\nimport seriesLabels from \"highcharts/modules/series-label\";\n\nexport default {\n  name: 'LineChartLeverInfo',\n  props: ['chartTitle','chartfilename'],\n  data: function() {\n    return {\n      chartData: undefined,\n      isEmpty: false\n    }\n  },\n  methods: {\n    loadChartData() {\n      let fileName = this.chartfilename;\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      import(`../components/leverInfoCharts/${fileName}`)\n      .then(module => {\n        this.chartData = module.chartData;\n        this.buildChart();\n       })\n       .catch(() => {\n         // console.log(err);\n         this.isEmpty = true;\n       });\n    },\n    buildChart() {\n      var container = this.$refs.chart;\n\n      seriesLabels(highcharts);\n\n      this.chart = new highcharts.Chart({\n        chart: {\n          renderTo: container,\n          type: 'line',\n          spacingBottom: 30\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: this.chartTitle + ' - Ambition levels'\n        },\n        xAxis: {\n          tickmarkPlacement: 'on',\n          title: {\n            enabled: false\n          },\n          tickInterval: 5 // 5 years\n        },\n        yAxis: {\n          title: {\n            text: this.chartData.unit\n          }\n        },\n        tooltip: {\n          split: true\n        },\n        series: this.chartData.series,\n        caption: {\n          text: \"<b>\"+this.chartData.caption+\"</b>\",\n          align: 'center'\n        }\n      });\n    }\n  },\n  mounted() {\n    this.loadChartData(); // called on mounted, because it calls buildChart() which relies on a $ref\n  },\n  beforeDestroy() {\n    if(this.chart) {\n      this.chart.destroy();\n    }\n  },\n}\n</script>\n\n<style>\n.lever-info-chart-empty {\n  display: none;\n}\n</style>\n"],"sourceRoot":"src/charts"}]}
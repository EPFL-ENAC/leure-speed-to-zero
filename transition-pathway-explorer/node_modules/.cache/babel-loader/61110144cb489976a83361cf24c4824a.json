{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/lib/PopUpSelect.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/lib/PopUpSelect.vue","mtime":1707210098283},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'PopUpSelect',\n  props: ['toggleElem', 'items', 'nameProp', 'title', 'callback'],\n  data: function data() {\n    return {\n      open: false,\n      selectedIndex: 0\n    };\n  },\n  methods: {\n    toggleOpen: function toggleOpen(value) {\n      this.open = value;\n      if (!this.open) {\n        this.selectedIndex = 0;\n        return;\n      } else {\n        this.$refs.popup.focus();\n      }\n    },\n    prevItem: function prevItem() {\n      if (this.selectedIndex > 0) {\n        this.selectedIndex--;\n        this.scrollToSelected();\n      }\n    },\n    nextItem: function nextItem() {\n      if (this.selectedIndex < this.items.length - 1) {\n        this.selectedIndex++;\n        this.scrollToSelected();\n      }\n    },\n    selectItem: function selectItem(ind) {\n      if (ind >= 0 && this.items[ind]) {\n        if (this.callback) {\n          this.callback(this.items[ind], ind);\n        }\n      }\n      this.toggleOpen(false);\n    },\n    getItemName: function getItemName(ind) {\n      if (this.nameProp && this.items[ind] && this.items[ind].hasOwnProperty(this.nameProp)) {\n        return this.items[ind][this.nameProp];\n      }\n      return '';\n    },\n    scrollToSelected: function scrollToSelected() {\n      var item = this.$refs.items[this.selectedIndex];\n      if (!item) {\n        return;\n      }\n\n      // the itemsHeight and itemsContHeight could also be cached, but well, there are no other expensive processes running in the background anyways\n      var itemBCR = item.getBoundingClientRect();\n      var itemsHeight = itemBCR.height; // all items have the same height\n\n      var itemTop = itemsHeight * this.selectedIndex;\n      var itemBottom = itemsHeight * (this.selectedIndex + 1);\n      var itemsCont = this.$refs.itemscontainer;\n      var itemsContHeight = itemsCont.getBoundingClientRect().height;\n      if (itemBottom < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n      if (itemTop > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n      if (itemBottom > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n      if (itemTop < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n    },\n    handleFocusOut: function handleFocusOut() {\n      this.toggleOpen(false);\n    }\n  }\n};",{"version":3,"sources":["PopUpSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"popupselect\"\n    v-on:focusout=\"handleFocusOut\"\n    ref=\"popup\"\n    v-on:keydown.up=\"prevItem()\"\n    v-on:keydown.down=\"nextItem()\"\n    v-on:keydown.enter=\"selectItem(selectedIndex)\"\n    :tabindex=\"open ? 0 : -1\"\n  >\n    <div class=\"popupselect-inner-container\" ref=\"container\"\n      v-show=\"open\"\n    >\n      <div v-if=\"title\" class=\"popupselect-title\">{{title}}</div>\n      <div class=\"popupselect-items-container\" ref=\"itemscontainer\">\n        <div v-for=\"(item, ind) in items\" ref=\"items\" :key=\"ind\"\n          class=\"popupselect-item\"\n          :class=\"{'ps-selected': ind===selectedIndex}\"\n          v-on:click=\"selectItem(ind)\"\n          v-on:mouseenter=\"selectedIndex = ind\"\n          v-on:mousemove=\"selectedIndex = ind\"\n        >\n          <span>{{getItemName(ind)}}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'PopUpSelect',\n  props: ['toggleElem', 'items', 'nameProp', 'title', 'callback'],\n  data() {\n    return {\n      open: false,\n      selectedIndex: 0\n    }\n  },\n  methods: {\n    toggleOpen(value) {\n      this.open = value;\n      if(!this.open) {\n        this.selectedIndex = 0;\n        return;\n      } else {\n        this.$refs.popup.focus();\n      }\n    },\n    prevItem() {\n      if(this.selectedIndex > 0) {\n        this.selectedIndex--;\n        this.scrollToSelected();\n      }\n    },\n    nextItem() {\n      if(this.selectedIndex < this.items.length-1) {\n        this.selectedIndex++;\n        this.scrollToSelected();\n      }\n    },\n    selectItem(ind) {\n      if(ind >= 0 && this.items[ind]) {\n        if(this.callback) {\n          this.callback(this.items[ind], ind);\n        }\n      }\n      this.toggleOpen(false);\n    },\n    getItemName(ind) {\n      if(this.nameProp && this.items[ind] && this.items[ind].hasOwnProperty(this.nameProp)) {\n        return this.items[ind][this.nameProp];\n      }\n      return '';\n    },\n    scrollToSelected() {\n      let item = this.$refs.items[this.selectedIndex];\n      if(!item) {\n        return;\n      }\n\n      // the itemsHeight and itemsContHeight could also be cached, but well, there are no other expensive processes running in the background anyways\n      let itemBCR = item.getBoundingClientRect();\n      let itemsHeight = itemBCR.height; // all items have the same height\n\n      let itemTop = itemsHeight*(this.selectedIndex);\n      let itemBottom = itemsHeight*(this.selectedIndex+1);\n\n      let itemsCont = this.$refs.itemscontainer;\n      let itemsContHeight = itemsCont.getBoundingClientRect().height;\n\n      if(itemBottom < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n      if(itemTop > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n      if(itemBottom > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom-itemsContHeight;\n      }\n      if(itemTop < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n\n    },\n    handleFocusOut() {\n      this.toggleOpen(false);\n    }\n  }\n}\n</script>\n\n<style>\n.popupselect {\n  position: absolute;\n  top: 0px;\n  right: 30px;\n  z-index: 1001;\n}\n.popupselect:focus {\n  border: none;\n  outline: none;\n}\n\n.popupselect-inner-container {\n  width: 268px;\n  font-weight: normal;\n  color: #2d2d2d;\n  background-color: white;\n  box-shadow: 0px 0px 6px 0px rgba(0,0,0,0.4);\n}\n.popupselect-title {\n  border-bottom: 1px solid #dcdcdc;\n  padding: 8px;\n}\n.popupselect-items-container {\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.popupselect-item {\n  padding: 6px 8px;\n}\n\n.ps-selected {\n  background-color: #dcdcdc;\n}\n</style>\n"],"sourceRoot":"src/lib"}]}
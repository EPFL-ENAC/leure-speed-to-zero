{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/charts/LineChartLeverInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/charts/LineChartLeverInfo.vue","mtime":1707210098267},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport highcharts from \"highcharts\";\nimport seriesLabels from \"highcharts/modules/series-label\";\nexport default {\n  name: 'LineChartLeverInfo',\n  props: ['chartTitle', 'chartfilename'],\n  data: function data() {\n    return {\n      chartData: undefined,\n      isEmpty: false\n    };\n  },\n  methods: {\n    loadChartData: function loadChartData() {\n      var _this = this;\n\n      var fileName = this.chartfilename; //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n\n      import(\"../components/leverInfoCharts/\".concat(fileName)).then(function (module) {\n        _this.chartData = module.chartData;\n\n        _this.buildChart();\n      }).catch(function () {\n        // console.log(err);\n        _this.isEmpty = true;\n      });\n    },\n    buildChart: function buildChart() {\n      var container = this.$refs.chart;\n      seriesLabels(highcharts);\n      this.chart = new highcharts.Chart({\n        chart: {\n          renderTo: container,\n          type: 'line',\n          spacingBottom: 30\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: this.chartTitle + ' - Ambition levels'\n        },\n        xAxis: {\n          tickmarkPlacement: 'on',\n          title: {\n            enabled: false\n          },\n          tickInterval: 5 // 5 years\n\n        },\n        yAxis: {\n          title: {\n            text: this.chartData.unit\n          }\n        },\n        tooltip: {\n          split: true\n        },\n        series: this.chartData.series,\n        caption: {\n          text: \"<b>\" + this.chartData.caption + \"</b>\",\n          align: 'center'\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.loadChartData(); // called on mounted, because it calls buildChart() which relies on a $ref\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n  }\n};",{"version":3,"sources":["LineChartLeverInfo.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,YAAA,MAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,KAAA,EAAA,CAAA,YAAA,EAAA,eAAA,CAFA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,SADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,aAAA,CADA,CAGA;;AACA,qDAAA,QAAA,GACA,IADA,CACA,UAAA,MAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,MAAA,CAAA,SAAA;;AACA,QAAA,KAAA,CAAA,UAAA;AACA,OAJA,EAKA,KALA,CAKA,YAAA;AACA;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,IAAA;AACA,OARA;AASA,KAdA;AAeA,IAAA,UAfA,wBAeA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AAEA,MAAA,YAAA,CAAA,UAAA,CAAA;AAEA,WAAA,KAAA,GAAA,IAAA,UAAA,CAAA,KAAA,CAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,QAAA,EAAA,SADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,aAAA,EAAA;AAHA,SADA;AAMA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SANA;AASA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,GAAA;AADA,SATA;AAYA,QAAA,KAAA,EAAA;AACA,UAAA,iBAAA,EAAA,IADA;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,OAAA,EAAA;AADA,WAFA;AAKA,UAAA,YAAA,EAAA,CALA,CAKA;;AALA,SAZA;AAmBA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA,KAAA,SAAA,CAAA;AADA;AADA,SAnBA;AAwBA,QAAA,OAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SAxBA;AA2BA,QAAA,MAAA,EAAA,KAAA,SAAA,CAAA,MA3BA;AA4BA,QAAA,OAAA,EAAA;AACA,UAAA,IAAA,EAAA,QAAA,KAAA,SAAA,CAAA,OAAA,GAAA,MADA;AAEA,UAAA,KAAA,EAAA;AAFA;AA5BA,OAAA,CAAA;AAiCA;AArDA,GATA;AAgEA,EAAA,OAhEA,qBAgEA;AACA,SAAA,aAAA,GADA,CACA;AACA,GAlEA;AAmEA,EAAA,aAnEA,2BAmEA;AACA,QAAA,KAAA,KAAA,EAAA;AACA,WAAA,KAAA,CAAA,OAAA;AACA;AACA;AAvEA,CAAA","sourcesContent":["<template>\n  <div class=\"chart-container\" :class=\"{'lever-info-chart-empty': isEmpty}\">\n    <div class=\"chart\" ref=\"chart\"></div>\n  </div>\n</template>\n\n<script>\nimport highcharts from \"highcharts\";\nimport seriesLabels from \"highcharts/modules/series-label\";\n\nexport default {\n  name: 'LineChartLeverInfo',\n  props: ['chartTitle','chartfilename'],\n  data: function() {\n    return {\n      chartData: undefined,\n      isEmpty: false\n    }\n  },\n  methods: {\n    loadChartData() {\n      let fileName = this.chartfilename;\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      import(`../components/leverInfoCharts/${fileName}`)\n      .then(module => {\n        this.chartData = module.chartData;\n        this.buildChart();\n       })\n       .catch(() => {\n         // console.log(err);\n         this.isEmpty = true;\n       });\n    },\n    buildChart() {\n      var container = this.$refs.chart;\n\n      seriesLabels(highcharts);\n\n      this.chart = new highcharts.Chart({\n        chart: {\n          renderTo: container,\n          type: 'line',\n          spacingBottom: 30\n        },\n        credits: {\n          enabled: false\n        },\n        title: {\n          text: this.chartTitle + ' - Ambition levels'\n        },\n        xAxis: {\n          tickmarkPlacement: 'on',\n          title: {\n            enabled: false\n          },\n          tickInterval: 5 // 5 years\n        },\n        yAxis: {\n          title: {\n            text: this.chartData.unit\n          }\n        },\n        tooltip: {\n          split: true\n        },\n        series: this.chartData.series,\n        caption: {\n          text: \"<b>\"+this.chartData.caption+\"</b>\",\n          align: 'center'\n        }\n      });\n    }\n  },\n  mounted() {\n    this.loadChartData(); // called on mounted, because it calls buildChart() which relies on a $ref\n  },\n  beforeDestroy() {\n    if(this.chart) {\n      this.chart.destroy();\n    }\n  },\n}\n</script>\n\n<style>\n.lever-info-chart-empty {\n  display: none;\n}\n</style>\n"],"sourceRoot":"src/charts"}]}
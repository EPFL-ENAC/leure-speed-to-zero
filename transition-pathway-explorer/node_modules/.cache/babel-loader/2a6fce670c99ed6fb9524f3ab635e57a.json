{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/ClimateImpactChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/ClimateImpactChart.vue","mtime":1707210098277},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport AreaRange from \"../../charts/AreaRange.vue\";\nexport default {\n  name: 'ClimateImpactChart',\n  components: {\n    AreaRange: AreaRange\n  },\n  props: ['subtab', 'outputs', 'chartDefinitions', 'countrycode', 'appState'],\n  data: function data() {\n    return {\n      chart1Data: undefined,\n      infoComponent: undefined\n    };\n  },\n  methods: {\n    buildData: function buildData() {\n      var currChart = this.chartDefinitions[this.subtab.charts[0]]; // the chart definition has to have only one output (the global temperature)\n\n      var tempOutput = this.outputs[currChart.outputs[0].id];\n\n      if (!tempOutput) {\n        return;\n      } // find index of 2100\n\n\n      var index2100 = tempOutput.timeAxis.indexOf(2100);\n      var temp2100 = tempOutput.data[\"EU\"][index2100]; // console.log('buildData ', tempOutput, currChart.outputs[0], index2100, temp2100);\n\n      this.chart1Data = {\n        title: currChart.title,\n        unit: currChart.unit,\n        series: currChart.series,\n        temp2100: temp2100\n      };\n    },\n    loadInfoComponent: function loadInfoComponent() {\n      var _this = this;\n\n      var fileName = this.subtab.charts[0] + '.vue'; //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //infoComponent = () => import(`../content/${fileName}`)\n\n      import(\"./content/\".concat(fileName)).then(function () {\n        _this.infoComponent = function () {\n          return import(\"./content/\".concat(fileName));\n        };\n      }).catch(function () {// console.log('info component not found');\n      });\n    }\n  },\n  created: function created() {\n    this.loadInfoComponent();\n    this.buildData();\n  },\n  watch: {\n    'appState.lastAPIResponse': function appStateLastAPIResponse() {\n      this.buildData();\n    }\n  }\n};",{"version":3,"sources":["ClimateImpactChart.vue"],"names":[],"mappings":";;;;;;;AAQA,OAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,oBADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GAFA;AAGA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,UAAA,CAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,SADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAIA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CADA,CAGA;;AACA,UAAA,UAAA,GAAA,KAAA,OAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAEA,UAAA,CAAA,UAAA,EAAA;AACA;AACA,OARA,CAUA;;;AACA,UAAA,SAAA,GAAA,UAAA,CAAA,QAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,UAAA,QAAA,GAAA,UAAA,CAAA,IAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAZA,CAaA;;AAEA,WAAA,UAAA,GAAA;AACA,QAAA,KAAA,EAAA,SAAA,CAAA,KADA;AAEA,QAAA,IAAA,EAAA,SAAA,CAAA,IAFA;AAGA,QAAA,MAAA,EAAA,SAAA,CAAA,MAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAAA;AAMA,KAtBA;AAuBA,IAAA,iBAvBA,+BAuBA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,MAAA,CADA,CAGA;AACA;AACA;AACA;AACA;AACA;;AACA,iCAAA,QAAA,GACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA;AAAA,iBAAA,2BAAA,QAAA,EAAA;AAAA,SAAA;AACA,OAHA,EAIA,KAJA,CAIA,YAAA,CACA;AACA,OANA;AAOA;AAvCA,GAVA;AAmDA,EAAA,OAnDA,qBAmDA;AACA,SAAA,iBAAA;AACA,SAAA,SAAA;AACA,GAtDA;AAuDA,EAAA,KAAA,EAAA;AACA,gCAAA,mCAAA;AACA,WAAA,SAAA;AACA;AAHA;AAvDA,CAAA","sourcesContent":["<template>\n  <div class=\"subtab-content\">\n    <AreaRange v-if=\"chart1Data\" :chart-data=\"chart1Data\"/>\n    <component v-if=\"infoComponent\" :is=\"infoComponent\"/>\n  </div>\n</template>\n\n<script>\nimport AreaRange from '../../charts/AreaRange.vue';\n\nexport default {\n  name: 'ClimateImpactChart',\n  components: {AreaRange},\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: undefined,\n      infoComponent: undefined\n    }\n  },\n  methods: {\n    buildData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n\n      // the chart definition has to have only one output (the global temperature)\n      let tempOutput = this.outputs[currChart.outputs[0].id];\n\n      if(!tempOutput) {\n        return;\n      }\n\n      // find index of 2100\n      let index2100 = tempOutput.timeAxis.indexOf(2100);\n      let temp2100 = tempOutput.data[\"EU\"][index2100];\n      // console.log('buildData ', tempOutput, currChart.outputs[0], index2100, temp2100);\n\n      this.chart1Data  = {\n        title: currChart.title,\n        unit: currChart.unit,\n        series: currChart.series,\n        temp2100: temp2100\n      }\n    },\n    loadInfoComponent() {\n      let fileName = this.subtab.charts[0]+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //infoComponent = () => import(`../content/${fileName}`)\n      import(`./content/${fileName}`)\n      .then(() => {\n        this.infoComponent = () => import(`./content/${fileName}`);\n      })\n      .catch(() => {\n       // console.log('info component not found');\n      });\n    }\n  },\n  created() {\n    this.loadInfoComponent();\n    this.buildData();\n  },\n  watch: {\n    'appState.lastAPIResponse': function() {\n      this.buildData();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"],"sourceRoot":"src/components/tabs"}]}
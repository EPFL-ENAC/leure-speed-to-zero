{"remainingRequest":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/src/components/leverInfos/lever_alt-protein.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/src/components/leverInfos/lever_alt-protein.vue","mtime":1707210098272},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChartLeverInfo from \"../../charts/LineChartLeverInfo.vue\";\nexport default {\n  name: 'lever_alt-protein',\n  components: {\n    LineChartLeverInfo: LineChartLeverInfo\n  },\n  data: function data() {\n    return {\n      componentInstance: undefined\n    };\n  },\n  methods: {\n    loadChartComponent: function loadChartComponent() {\n      var _this = this;\n      var fileName = 'lever_alt-proteinChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(\"./chartExceptions/\".concat(fileName)).then(function () {\n        _this.componentInstance = function () {\n          return import(\"./chartExceptions/\".concat(fileName));\n        };\n      }).catch(function () {\n        _this.componentInstance = LineChartLeverInfo;\n      });\n    }\n  },\n  created: function created() {\n    this.loadChartComponent();\n  }\n};",{"version":3,"sources":["lever_alt-protein.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,kBAAA;AAEA,eAAA;EACA,IAAA,EAAA,mBAAA;EACA,UAAA,EAAA;IACA,kBAAA,EAAA;EACA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA;MACA,iBAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,kBAAA,WAAA,mBAAA,EAAA;MAAA,IAAA,KAAA;MACA,IAAA,QAAA,GAAA,4BAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAA,sBAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CACA,IAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA;UAAA,OAAA,MAAA,sBAAA,MAAA,CAAA,QAAA,CAAA,CAAA;QAAA;MACA,CAAA,CAAA,CACA,KAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA,kBAAA;MACA,CAAA,CAAA;IACA;EACA,CAAA;EACA,OAAA,WAAA,QAAA,EAAA;IACA,IAAA,CAAA,kBAAA,CAAA,CAAA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Alternative protein source</h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>The lever sets the share of insect and microalgae-based meals for each livestock type, and disable/enable byproduct feedstock for other markets.</p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Alternative protein source\" chartfilename=\"lever_alt-protein.js\"\n      ></component>\n      <p>Livestock is consuming more than 60% of the crop production in Europe, which affects land demand, both inside and outside the EU. Indeed, the cake (livestock feed) demand is to a large extent supplied through import, possibly leading to deforestation, biodiversity erosion and CO2 emissions. Insect farming and algae-based meals are promising options to produce a large amount of feedstuff and byproducts while using limited amount of lands.</p>\n      <p>The ‘alternative protein source’ lever sets the use of alternative feedstuff for livestock including insect and algae-based meals. The lever considers the animal health and food output quality to set the maximum alternative feed intake for each livestock. The lever also unlocks the potential for bioenergy (e.g. microalgae oil) and organic-based fertilizer (i.e. insect manure).</p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level 1</div><p>The deployment of insect and microalgae-based meals does not occur, animal feed compounds remain the same as in 2015.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 2</div><p>The deployment of insect and microalgae meals occur in a modest extent. Microalgae meals reach up to 1, 3, 5 and 10% for poultry, ruminants, pigs and in aquaculture respectively. The deployment of insect and microalgae meals occur in a modest extent. Insect meals reach up 10% for poultry, pigs and in aquaculture.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 3</div><p>The deployment of insect and microalgae meals occur in a large extent. Microalgae meals reach up to 3, 5, 15 and 20% for poultry, ruminants, pigs and in aquaculture respectively. Insect meals reach up to 20% of the typical ration for poultry, pigs and in aquaculture. Consequently, spare lands are significant, and through land management, new prairies, reforestation and afforestation can occur. Microalgae and insect biomass byproducts enable large production of bioenergy, organic manure and waste valorisation (through insect farming).</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 4</div><p>The deployment of insect and microalgae meals occur in a large extent. Microalgae meals reach up to 5, 10, 25 and 30% for poultry, ruminants, pigs and in aquaculture respectively. Insect meals reach up to 30%, 33% and 40% of the typical ration of poultry, pigs and in aquaculture respectively. Consequently, spare lands are significant, and through land management, new prairies, reforestation and afforestation can occur. Microalgae and insect biomass byproducts enable large production of bioenergy, organic manure and waste valorisation (through insect farming).</p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_alt-protein',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_alt-proteinChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"],"sourceRoot":"src/components/leverInfos"}]}
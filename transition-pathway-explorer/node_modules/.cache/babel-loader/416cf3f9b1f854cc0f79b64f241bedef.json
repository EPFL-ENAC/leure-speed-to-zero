{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/OneChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/tabs/OneChart.vue","mtime":1707210098277},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as outputsService from \"../../outputsService.js\";\nimport { buildChartData } from \"../../chartSeriesBuilders.js\";\nexport default {\n  name: 'OneChart',\n  components: {\n    'StackedAreaChart': function StackedAreaChart() {\n      return import(\"../../charts/StackedAreaChart.vue\");\n    },\n    'LineChart': function LineChart() {\n      return import(\"../../charts/LineChart.vue\");\n    },\n    'StackedAreaChart100Percent': function StackedAreaChart100Percent() {\n      return import(\"../../charts/StackedAreaChart100Percent.vue\");\n    }\n  },\n  props: ['subtab', 'outputs', 'chartDefinitions', 'countrycode', 'appState'],\n  data: function data() {\n    return {\n      chart1Data: {},\n      chartComponent: undefined,\n      infoComponent: undefined\n    };\n  },\n  computed: {\n    chartHasNegativeData: function chartHasNegativeData() {\n      var currChart = this.chartDefinitions[this.subtab.charts[0]];\n      return currChart.type === \"StackedAreaNegative\";\n    }\n  },\n  methods: {\n    buildDataForChart: function buildDataForChart() {\n      var currChart = this.chartDefinitions[this.subtab.charts[0]];\n      var chartData = buildChartData(this.countrycode, currChart, this.outputs, this.chartHasNegativeData);\n\n      if (chartData) {\n        this.chart1Data = chartData;\n      } //possible to add color info, css classes, sort the series etc\n\n    },\n    loadChartComponent: function loadChartComponent() {\n      var currChart = this.chartDefinitions[this.subtab.charts[0]]; // console.log('loadChartComponent ', currChart, this.subtab, this.chartDefinitions);\n\n      if (currChart) {\n        this.chartComponent = outputsService.chartTypeToComponentMap[currChart.type];\n      }\n    },\n    loadInfoComponent: function loadInfoComponent() {\n      var _this = this;\n\n      var fileName = this.subtab.charts[0] + '.vue'; //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //infoComponent = () => import(`../content/${fileName}`)\n\n      import(\"./content/\".concat(fileName)).then(function () {\n        _this.infoComponent = function () {\n          return import(\"./content/\".concat(fileName));\n        };\n      }).catch(function () {// console.log('info component not found');\n      });\n    }\n  },\n  created: function created() {\n    this.loadChartComponent();\n\n    if (this.appState.lastAPIResponse) {\n      // only call buildDataForChart when data is already available!\n      this.buildDataForChart();\n    }\n\n    this.loadInfoComponent();\n  },\n  watch: {\n    'appState.lastAPIResponse': function appStateLastAPIResponse() {\n      this.buildDataForChart();\n    },\n    countrycode: function countrycode() {\n      this.buildDataForChart();\n    }\n  }\n};",{"version":3,"sources":["OneChart.vue"],"names":[],"mappings":";;;;;;;;;;AAWA,OAAA,KAAA,cAAA;AACA,SAAA,cAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,wBAAA;AAAA,aAAA,2CAAA;AAAA,KADA;AAEA,iBAAA;AAAA,aAAA,oCAAA;AAAA,KAFA;AAGA,kCAAA;AAAA,aAAA,qDAAA;AAAA;AAHA,GAFA;AAOA,EAAA,KAAA,EAAA,CAAA,QAAA,EAAA,SAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,UAAA,CAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,cAAA,EAAA,SAFA;AAGA,MAAA,aAAA,EAAA;AAHA,KAAA;AAKA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,oBADA,kCACA;AACA,UAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,aAAA,SAAA,CAAA,IAAA,KAAA,qBAAA;AACA;AAJA,GAfA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AACA,UAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,cAAA,CAAA,KAAA,WAAA,EAAA,SAAA,EAAA,KAAA,OAAA,EAAA,KAAA,oBAAA,CAAA;;AACA,UAAA,SAAA,EAAA;AACA,aAAA,UAAA,GAAA,SAAA;AACA,OALA,CAMA;;AACA,KARA;AASA,IAAA,kBATA,gCASA;AACA,UAAA,SAAA,GAAA,KAAA,gBAAA,CAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CADA,CAEA;;AACA,UAAA,SAAA,EAAA;AACA,aAAA,cAAA,GAAA,cAAA,CAAA,uBAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA;AACA,KAfA;AAgBA,IAAA,iBAhBA,+BAgBA;AAAA;;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,CAAA,IAAA,MAAA,CADA,CAGA;AACA;AACA;AACA;AACA;AACA;;AACA,iCAAA,QAAA,GACA,IADA,CACA,YAAA;AACA,QAAA,KAAA,CAAA,aAAA,GAAA;AAAA,iBAAA,2BAAA,QAAA,EAAA;AAAA,SAAA;AACA,OAHA,EAIA,KAJA,CAIA,YAAA,CACA;AACA,OANA;AAOA;AAhCA,GArBA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,kBAAA;;AAEA,QAAA,KAAA,QAAA,CAAA,eAAA,EAAA;AACA;AACA,WAAA,iBAAA;AACA;;AAEA,SAAA,iBAAA;AACA,GAhEA;AAiEA,EAAA,KAAA,EAAA;AACA,gCAAA,mCAAA;AACA,WAAA,iBAAA;AACA,KAHA;AAIA,IAAA,WAAA,EAAA,uBAAA;AACA,WAAA,iBAAA;AACA;AANA;AAjEA,CAAA","sourcesContent":["<template>\n  <div class=\"subtab-content\">\n    <component v-bind:is=\"chartComponent\"\n      v-if=\"Object.keys(chart1Data).length\"\n      :chart-data=\"chart1Data\"\n    ></component>\n    <component v-if=\"infoComponent\" :is=\"infoComponent\"/>\n  </div>\n</template>\n\n<script>\nimport * as outputsService from '../../outputsService.js';\nimport {buildChartData} from '../../chartSeriesBuilders.js';\n\nexport default {\n  name: 'OneChart',\n  components: {\n    'StackedAreaChart': () => import('../../charts/StackedAreaChart.vue'),\n    'LineChart': () => import('../../charts/LineChart.vue'),\n    'StackedAreaChart100Percent': () => import('../../charts/StackedAreaChart100Percent.vue')\n  },\n  props: ['subtab','outputs','chartDefinitions','countrycode','appState'],\n  data() {\n    return {\n      chart1Data: {},\n      chartComponent: undefined,\n      infoComponent: undefined\n    }\n  },\n  computed: {\n    chartHasNegativeData() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n      return currChart.type === \"StackedAreaNegative\";\n    }\n  },\n  methods: {\n    buildDataForChart() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n      let chartData = buildChartData(this.countrycode, currChart, this.outputs, this.chartHasNegativeData);\n      if(chartData) {\n        this.chart1Data = chartData;\n      }\n      //possible to add color info, css classes, sort the series etc\n    },\n    loadChartComponent() {\n      let currChart = this.chartDefinitions[this.subtab.charts[0]];\n      // console.log('loadChartComponent ', currChart, this.subtab, this.chartDefinitions);\n      if(currChart) {\n        this.chartComponent = outputsService.chartTypeToComponentMap[currChart.type];\n      }\n    },\n    loadInfoComponent() {\n      let fileName = this.subtab.charts[0]+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //infoComponent = () => import(`../content/${fileName}`)\n      import(`./content/${fileName}`)\n      .then(() => {\n        this.infoComponent = () => import(`./content/${fileName}`);\n      })\n      .catch(() => {\n        // console.log('info component not found');\n      });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n\n    if(this.appState.lastAPIResponse) {\n      // only call buildDataForChart when data is already available!\n      this.buildDataForChart();\n    }\n\n    this.loadInfoComponent();\n  },\n  watch: {\n    'appState.lastAPIResponse': function() {\n      this.buildDataForChart();\n    },\n    countrycode: function() {\n      this.buildDataForChart();\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n</style>\n"],"sourceRoot":"src/components/tabs"}]}
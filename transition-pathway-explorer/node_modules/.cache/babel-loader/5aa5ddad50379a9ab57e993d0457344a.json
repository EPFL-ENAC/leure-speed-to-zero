{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_climate-smart-forestry.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/components/leverInfos/lever_climate-smart-forestry.vue","mtime":1707210098274},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChartLeverInfo from \"../../charts/LineChartLeverInfo.vue\";\nexport default {\n  name: 'lever_climate-smart-forestry',\n  components: {\n    LineChartLeverInfo: LineChartLeverInfo\n  },\n  data: function data() {\n    return {\n      componentInstance: undefined\n    };\n  },\n  methods: {\n    loadChartComponent: function loadChartComponent() {\n      var _this = this;\n      var fileName = 'lever_climate-smart-forestryChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(\"./chartExceptions/\".concat(fileName)).then(function () {\n        _this.componentInstance = function () {\n          return import(\"./chartExceptions/\".concat(fileName));\n        };\n      }).catch(function () {\n        _this.componentInstance = LineChartLeverInfo;\n      });\n    }\n  },\n  created: function created() {\n    this.loadChartComponent();\n  }\n};",{"version":3,"sources":["lever_climate-smart-forestry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,kBAAA;AAEA,eAAA;EACA,IAAA,EAAA,8BAAA;EACA,UAAA,EAAA;IACA,kBAAA,EAAA;EACA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA;MACA,iBAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,kBAAA,WAAA,mBAAA,EAAA;MAAA,IAAA,KAAA;MACA,IAAA,QAAA,GAAA,uCAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,MAAA,sBAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CACA,IAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA;UAAA,OAAA,MAAA,sBAAA,MAAA,CAAA,QAAA,CAAA,CAAA;QAAA;MACA,CAAA,CAAA,CACA,KAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA,kBAAA;MACA,CAAA,CAAA;IACA;EACA,CAAA;EACA,OAAA,WAAA,QAAA,EAAA;IACA,IAAA,CAAA,kBAAA,CAAA,CAAA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <!--created by leverInfoParser.js script (tools folder)-->\n  <div id=\"lever-info\">\n    <div id=\"lever-info-header\">\n      <h3 id=\"lever-info-title\">Forestry practices </h3>\n    </div>\n    <div id=\"lever-info-content\">\n      <p>The lever sets the ambition regarding the deployment of climate smart forestry.</p>\n      <component class=\"lever-info-chart\" v-if=\"componentInstance\" :is=\"componentInstance\"\n        chart-title=\"Forestry practices \" chartfilename=\"lever_climate-smart-forestry.js\"\n      ></component>\n      <p>The European forests enabled the capture of 419 MtCO2e in 2016 in the EU 28+Switzerland, which represents almost 8% of GHG emissions. Climate smart forestry includes a set of enhanced management practices (such as full grown coppice, sustainable harvest rate) that can enable an additional 440 MtCO2 mitigation potential by 2050.</p>\n      <p>The ‘climate-smart forestry’ lever sets the ambition for the deployment of enhanced forest management practices. It affects the gross biomass increment, natural losses (including resilience against natural disturbances) and the harvest-rate.\n</p>\n      <div>\n        <ul><li class=\"lever-info-amibitions\"><div> Ambition Level 1</div><p>Continued adoption of sustainable forestry management practices leads to enhance the forest carbon pool potential (ceteris paribus) but it does not maximise the European potential. The biomass growth increment and harvesting rates follow the current trends.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 2</div><p>Climate smart forestry practices are deployed in public forests by 2050 (approximately 40% of European forests), leading to increased biomass production and carbon pool potential.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 3</div><p>Climate smart forestry practices are deployed in public forests and in the larger private forests by 2050 (approximately 70% of European forests), leading to increased biomass production and a carbon pool potential, twice as large compared with the current European forest long term strategy.</p></li><li class=\"lever-info-amibitions\"><div> Ambition Level 4</div><p>Climate smart forestry practices are deployed in all European forests by 2050, leading to maximise biomass production and carbon pool potential in Europe.</p></li></ul>\n      </div>\n      <p>\n        For more details on the definition of the ambition levels for this lever and on the context and\n        modelling assumptions, please refer to the <a href=\"http://www.european-calculator.eu/documentation/\" target=\"_blank\"><b>technical documentation</b></a>.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LineChartLeverInfo from '../../charts/LineChartLeverInfo.vue';\n\nexport default {\n  name: 'lever_climate-smart-forestry',\n  components: {\n    LineChartLeverInfo\n  },\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadChartComponent() {\n      let fileName = 'lever_climate-smart-forestryChart.vue';\n\n      // import() only works with partial paths, it doesn't take a single variable, like import(filePath).\n      // import() is not a function!! It just looks like one\n      // This rest is a bit hacky, but well.\n      // The first import() looks if the file exists, if not a default component is loaded.\n      // If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      // first succesful fetch. It can only work with a function like this (for dynamic imports):\n      // componentInstance = () => import(`../chartExceptions/${fileName}`)\n      import(`./chartExceptions/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./chartExceptions/${fileName}`);\n       })\n       .catch(() => {\n         this.componentInstance = LineChartLeverInfo;\n       });\n    }\n  },\n  created() {\n    this.loadChartComponent();\n  }\n}\n</script>\n\n<style>\n.lever-info-chart {\n  height: 400px;\n}\n</style>\n"],"sourceRoot":"src/components/leverInfos"}]}
{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/InputsMobile.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/components/InputsMobile.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as inputsService from \"../inputsService.js\";\nimport * as dataService from \"../dataService.js\";\nimport * as routeService from \"../routeService.js\";\nimport LeversTable from \"./LeversTable.vue\";\nimport PathwaySelector from \"./PathwaySelector.vue\";\nimport Modal from \"../lib/Modal.vue\";\nexport default {\n  name: 'InputsMobile',\n  components: {\n    LeversTable: LeversTable,\n    PathwaySelector: PathwaySelector,\n    Modal: Modal\n  },\n  props: ['appState'],\n  data: function data() {\n    return {};\n  },\n  methods: {\n    openLevers: function openLevers() {\n      this.$refs.levermodal.openModal();\n    },\n    cancel: function cancel() {\n      // console.log('cancel ', this.appState.mainScreenRouteString);\n      var appStateQuerystring = this.appState.mainScreenRouteString.substring(this.appState.mainScreenRouteString.indexOf('?'));\n      var urlParameters = routeService.getURLParams(appStateQuerystring, ['levers', 'other', 'country']);\n      inputsService.setInputsFromURLParameters(urlParameters.levers, urlParameters.other, urlParameters.country);\n      this.$refs.levermodal.closeModal();\n    },\n    calculate: function calculate() {\n      // just start a fetch\n      // how is it visible here, that a fetch needs to be started?\n      // --> lastAction is set!\n      if (this.appState.userAction.length) {\n        dataService.rewriteURL(dataService.updateURLParams());\n        dataService.fetchFromModelAPI();\n      }\n      this.$refs.levermodal.closeModal();\n    }\n  }\n};",{"version":3,"sources":["InputsMobile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAA,KAAA,aAAA;AACA,OAAA,KAAA,WAAA;AACA,OAAA,KAAA,YAAA;AAEA,OAAA,WAAA;AACA,OAAA,eAAA;AACA,OAAA,KAAA;AAEA,eAAA;EACA,IAAA,EAAA,cAAA;EACA,UAAA,EAAA;IACA,WAAA,EAAA,WAAA;IACA,eAAA,EAAA,eAAA;IACA,KAAA,EAAA;EACA,CAAA;EACA,KAAA,EAAA,CAAA,UAAA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA,CACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,UAAA,WAAA,WAAA,EAAA;MACA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA;IACA,CAAA;IACA,MAAA,WAAA,OAAA,EAAA;MACA;MACA,IAAA,mBAAA,GAAA,IAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,SAAA,CAAA,IAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;MACA,IAAA,aAAA,GAAA,YAAA,CAAA,YAAA,CAAA,mBAAA,EAAA,CAAA,QAAA,EAAA,OAAA,EAAA,SAAA,CAAA,CAAA;MACA,aAAA,CAAA,0BAAA,CAAA,aAAA,CAAA,MAAA,EAAA,aAAA,CAAA,KAAA,EAAA,aAAA,CAAA,OAAA,CAAA;MACA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA,CAAA,CAAA;IACA,CAAA;IACA,SAAA,WAAA,UAAA,EAAA;MACA;MACA;MACA;MACA,IAAA,IAAA,CAAA,QAAA,CAAA,UAAA,CAAA,MAAA,EAAA;QACA,WAAA,CAAA,UAAA,CAAA,WAAA,CAAA,eAAA,CAAA,CAAA,CAAA;QACA,WAAA,CAAA,iBAAA,CAAA,CAAA;MACA;MACA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA,CAAA,CAAA;IACA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <div id=\"inputs-mobile\">\n    <div id=\"open-levers\" class=\"pill-button\" v-on:click=\"openLevers\">\n      <span>Levers</span>\n    </div>\n\n    <Modal ref=\"levermodal\" :always-rendered=\"true\">\n      <div id=\"levers-modal\">\n        <PathwaySelector :app-state=\"appState\"/>\n        <LeversTable :app-state=\"appState\"></LeversTable>\n        <div id=\"levers-modal-footer\">\n          <button id=\"levers-cancel\" class=\"pill-button\" v-on:click=\"cancel\">\n            <span>Cancel</span>\n          </button>\n          <button id=\"levers-calculate\" class=\"pill-button\" v-on:click=\"calculate\">\n            <span>Calculate</span>\n          </button>\n          <div id=\"time-warning\">\n            <img v-if=\"appState.quickDataAvailable === false\" src=\"/img/time-warning.svg\">\n          </div>\n        </div>\n      </div>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport * as inputsService from '../inputsService.js';\nimport * as dataService from '../dataService.js';\nimport * as routeService from '../routeService.js';\n\nimport LeversTable from './LeversTable.vue';\nimport PathwaySelector from './PathwaySelector.vue';\nimport Modal from '../lib/Modal.vue';\n\nexport default {\n  name: 'InputsMobile',\n  components: {\n    LeversTable,\n    PathwaySelector,\n    Modal\n  },\n  props: ['appState'],\n  data() {\n    return {\n    }\n  },\n  methods: {\n    openLevers() {\n      this.$refs.levermodal.openModal();\n    },\n    cancel() {\n      // console.log('cancel ', this.appState.mainScreenRouteString);\n      let appStateQuerystring = this.appState.mainScreenRouteString.substring(this.appState.mainScreenRouteString.indexOf('?'));\n      let urlParameters = routeService.getURLParams(appStateQuerystring, ['levers', 'other', 'country']);\n      inputsService.setInputsFromURLParameters(urlParameters.levers, urlParameters.other, urlParameters.country);\n      this.$refs.levermodal.closeModal();\n    },\n    calculate() {\n      // just start a fetch\n      // how is it visible here, that a fetch needs to be started?\n      // --> lastAction is set!\n      if(this.appState.userAction.length) {\n        dataService.rewriteURL(dataService.updateURLParams());\n        dataService.fetchFromModelAPI();\n      }\n      this.$refs.levermodal.closeModal();\n    },\n  }\n}\n</script>\n\n<style>\n#inputs-mobile {\n  position: relative;\n}\n#open-levers {\n  position: fixed;\n  bottom: 30px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 110;\n}\n#levers-modal {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n}\n#levers-modal-footer {\n  flex: none;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n#levers-calculate {\n  margin-left: 20px;\n  width: 90px;\n  position: relative;\n}\n\n#time-warning {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 26px;\n  width: 26px;\n}\n#time-warning img {\n  display: block;\n  height: 100%;\n  width: 100%;\n}\n\n#inputs-mobile #levers-header {\n  padding-right: 0px;\n  max-width: 600px;\n}\n#inputs-mobile .levers-sector {\n  max-width: 600px;\n}\n\n#inputs-mobile .levers-title {\n  padding-left: 5px;\n}\n\n#inputs-mobile .levers-column2 {\n  flex: none;\n  width: 90px;\n  margin-left: auto;\n}\n#inputs-mobile .levers-column3 {\n  flex: none;\n  width: 90px;\n  margin-left: 10px;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}
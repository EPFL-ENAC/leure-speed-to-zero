{"remainingRequest":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/lib/DropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/src/lib/DropDown.vue","mtime":1707210098283},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/EUcalc/paris-tool/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234519986}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'DropDown',\n  props: {\n    items: Array,\n    callback: Function,\n    title: String,\n    // if not set, the selected item will be used as the title\n    nameProp: String,\n    // should be set if items is an array of objects and not strings\n    selected: Number,\n    // one index of items, can also be undefined!! Is that possible with that type definition?\n    headEmpty: Boolean,\n    reset: Boolean,\n    disabled: Boolean\n  },\n  data: function data() {\n    return {\n      selectedIndex: typeof this.selected !== 'undefined' && this.items[parseInt(this.selected)] ? parseInt(this.selected) : undefined,\n      open: false,\n      xDir: undefined,\n      yDir: undefined\n    };\n  },\n  computed: {\n    getHeadContent: function getHeadContent() {\n      if (typeof this.selectedIndex !== 'undefined') {\n        return this.getItemName(this.selectedIndex);\n      } else {\n        if (this.title && !this.headEmpty) {\n          return this.title;\n        }\n\n        return ''; //default\n      }\n    }\n  },\n  methods: {\n    jumpToInput: function jumpToInput(event) {\n      var _this = this;\n\n      if (this.disabled) {\n        return;\n      }\n      /*keyup is kind of a natural rate limiting, but keydown more consistent*/\n\n\n      var keyPressed = event.key; // abort if no single character was pressed\n\n      if (keyPressed.length > 1) {\n        return;\n      } // find index of first item that starts with this character, this means that the items should be sorted,\n      // but sorting items is not responsibility of this component, it should be done outside\n\n\n      var foundInd;\n      var itemWasFound = this.items.some(function (item, ind) {\n        if (_this.getItemName(ind)[0] === keyPressed) {\n          //item is still a string!!\n          foundInd = ind;\n          return true;\n        }\n      }); // console.log('jumpToInput ', itemWasFound, foundInd);\n\n      if (itemWasFound && foundInd !== this.selectedIndex) {\n        this.selectItem(foundInd);\n        this.scrollToSelected();\n      }\n    },\n    toggleOpen: function toggleOpen() {\n      var _this2 = this;\n\n      if (this.disabled) {\n        return;\n      }\n\n      this.open = !this.open;\n\n      if (!this.open) {\n        this.$refs.root.blur();\n        return;\n      }\n\n      window.requestAnimationFrame(function () {\n        window.requestAnimationFrame(function () {\n          setDirections();\n\n          _this2.scrollToSelected();\n        });\n      });\n\n      var setDirections = function setDirections() {\n        var titleBCR = _this2.$refs.head.getBoundingClientRect();\n\n        var itemsBCR = _this2.$refs.container.getBoundingClientRect(); //left, right, top, bottom are relative to the viewport!\n\n\n        var viewPortHeight = window.innerHeight; // inner height of the viewport!\n\n        var titleTop = titleBCR.top;\n        var titleBottom = titleBCR.bottom;\n        var itemsHeight = itemsBCR.height; //check if space is available to the bottom, preferred default direction\n\n        if (titleTop + itemsHeight <= viewPortHeight) {\n          _this2.yDir = 'down';\n        } else {\n          //theoretical itemsLeft if items are overlapping to the left:\n          var topValueIfItemsGoToTop = titleTop - itemsHeight;\n          var bottomValueIfItemsGoToBottom = titleBottom + itemsHeight; //open in the direction where there is the most available space\n\n          if (topValueIfItemsGoToTop > bottomValueIfItemsGoToBottom - viewPortHeight) {\n            _this2.yDir = 'up';\n          } else {\n            _this2.yDir = 'down';\n          }\n        }\n      };\n    },\n    selectItem: function selectItem(ind) {\n      if (this.disabled) {\n        return;\n      }\n\n      if (ind >= 0 && this.items[ind]) {\n        this.selectedIndex = ind;\n\n        if (this.callback) {\n          this.callback(this.items[this.selectedIndex], ind);\n        }\n      }\n    },\n    prevItem: function prevItem() {\n      if (this.disabled) {\n        return;\n      }\n\n      if (typeof this.selectedIndex !== 'undefined') {\n        this.selectItem(this.selectedIndex - 1);\n        this.scrollToSelected();\n      }\n    },\n    nextItem: function nextItem() {\n      if (this.disabled) {\n        return;\n      }\n\n      if (typeof this.selectedIndex === 'undefined') {\n        this.selectItem(0);\n        this.scrollToSelected();\n      } else {\n        this.selectItem(this.selectedIndex + 1);\n        this.scrollToSelected();\n      }\n    },\n    getItemName: function getItemName(ind) {\n      if (this.nameProp && this.items[ind] && this.items[ind].hasOwnProperty(this.nameProp)) {\n        return this.items[ind][this.nameProp];\n      }\n\n      return this.items[ind];\n    },\n    scrollToSelected: function scrollToSelected() {\n      var item = this.$refs.items[this.selectedIndex];\n\n      if (!item) {\n        return;\n      } // the itemsHeight and itemsContHeight could also be cached, but well, there are no other expensive processes running in the background anyways\n\n\n      var itemBCR = item.getBoundingClientRect();\n      var itemsHeight = itemBCR.height; // all items have the same height\n\n      var itemTop = itemsHeight * this.selectedIndex;\n      var itemBottom = itemsHeight * (this.selectedIndex + 1);\n      var itemsCont = this.$refs.itemscontainer;\n      var itemsContHeight = itemsCont.getBoundingClientRect().height;\n\n      if (itemBottom < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n\n      if (itemTop > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n\n      if (itemBottom > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n\n      if (itemTop < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n    },\n    handleFocus: function handleFocus() {},\n    handleFocusOut: function handleFocusOut() {\n      this.open = false;\n    }\n  },\n  watch: {\n    reset: function reset(newVal) {\n      if (newVal) {\n        this.selectedIndex = undefined;\n      }\n    },\n    selected: function selected(newVal) {\n      this.selectedIndex = newVal;\n    }\n  }\n};",{"version":3,"sources":["DropDown.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"drop-down\"\n    :class=\"{'dd-open': open===true, 'dd-disabled': disabled===true}\"\n    v-on:focus=\"handleFocus\"\n    v-on:focusout=\"handleFocusOut\"\n    v-on:keydown.enter=\"toggleOpen\"\n    v-on:click=\"toggleOpen\"\n    v-on:keydown.up.prevent=\"prevItem()\"\n    v-on:keydown.down.prevent=\"nextItem()\"\n    v-on:keydown=\"jumpToInput($event)\"\n    tabindex=\"0\"\n    ref=\"root\"\n  >\n    <div class=\"drop-down-head\" ref=\"head\">\n      <span>{{getHeadContent}}</span>\n\n      <div class=\"drop-down-icon\" :class=\"{'dd-open': open===true}\">\n\n        <svg\n           xmlns=\"http://www.w3.org/2000/svg\"\n           width=\"5.3032866mm\"\n           height=\"4.7023478mm\"\n           viewBox=\"0 0 5.3032866 4.7023478\"\n           version=\"1.1\">\n          <path\n            class=\"drop-down-icon-path\"\n            :class=\"{'dd-disabled': disabled===true}\"\n            shape-rendering=\"geometricPrecision\"\n            transform=\"matrix(0.99780887,0,0,1.0004305,5.3545276e-4,-0.00148827)\"\n            d=\"M 2.6516436,4.2935209 0.40883783,0.40886766 4.8944491,0.40886754 Z\"\n            style=\"opacity:1;vector-effect:none;fill:#5f5f5f;fill-opacity:1;stroke:#5f5f5f;stroke-width:0.81773525;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;paint-order:fill markers stroke\" />\n        </svg>\n      </div>\n\n    </div>\n    <div class=\"drop-down-inner-container\" ref=\"container\"\n      v-show=\"open\"\n      :class=\"{\n        'dd-open': open===true,\n        'dd-up': yDir==='up',\n        'dd-down': yDir==='down',\n      }\"\n    >\n      <div v-if=\"title && typeof selectedIndex !== 'undefined'\" class=\"drop-down-title\">{{this.title}}</div>\n      <div class=\"drop-down-items-container\" ref=\"itemscontainer\">\n        <div v-for=\"(item, ind) in items\" ref=\"items\" :key=\"ind\"\n          class=\"drop-down-item\"\n          :class=\"{'dd-selected': ind===selectedIndex}\"\n          v-on:click=\"selectItem(ind)\"\n        >\n          <span>{{getItemName(ind)}}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'DropDown',\n  props: {\n    items: Array,\n    callback: Function,\n    title: String, // if not set, the selected item will be used as the title\n    nameProp: String, // should be set if items is an array of objects and not strings\n    selected: Number, // one index of items, can also be undefined!! Is that possible with that type definition?\n    headEmpty: Boolean,\n    reset: Boolean,\n    disabled: Boolean\n  },\n  data() {\n    return {\n      selectedIndex: typeof this.selected !== 'undefined' && this.items[parseInt(this.selected)] ? parseInt(this.selected) : undefined,\n      open: false,\n      xDir: undefined,\n      yDir: undefined\n    }\n  },\n  computed: {\n    getHeadContent() {\n\n      if(typeof this.selectedIndex !== 'undefined') {\n        return this.getItemName(this.selectedIndex);\n      } else {\n        if(this.title && !this.headEmpty) {\n          return this.title;\n        }\n        return ''; //default\n      }\n    }\n  },\n  methods: {\n    jumpToInput(event) {\n      if(this.disabled) {\n        return;\n      }\n      /*keyup is kind of a natural rate limiting, but keydown more consistent*/\n\n      let keyPressed = event.key;\n\n      // abort if no single character was pressed\n      if(keyPressed.length > 1) {\n        return;\n      }\n\n      // find index of first item that starts with this character, this means that the items should be sorted,\n      // but sorting items is not responsibility of this component, it should be done outside\n      let foundInd;\n      let itemWasFound = this.items.some((item, ind) => {\n        if(this.getItemName(ind)[0] === keyPressed) {//item is still a string!!\n          foundInd = ind;\n          return true;\n        }\n      });\n\n      // console.log('jumpToInput ', itemWasFound, foundInd);\n      if(itemWasFound && foundInd !== this.selectedIndex) {\n        this.selectItem(foundInd);\n        this.scrollToSelected();\n      }\n    },\n    toggleOpen() {\n      if(this.disabled) {\n        return;\n      }\n      this.open = !this.open;\n\n      if(!this.open) {\n        this.$refs.root.blur();\n        return;\n      }\n      window.requestAnimationFrame(() => {\n        window.requestAnimationFrame(() => {\n          setDirections();\n          this.scrollToSelected();\n        });\n      });\n\n      var setDirections = () => {\n\n        let titleBCR = this.$refs.head.getBoundingClientRect();\n\n        let itemsBCR = this.$refs.container.getBoundingClientRect(); //left, right, top, bottom are relative to the viewport!\n\n        let viewPortHeight = window.innerHeight; // inner height of the viewport!\n        let titleTop = titleBCR.top;\n        let titleBottom = titleBCR.bottom;\n        let itemsHeight = itemsBCR.height;\n\n        //check if space is available to the bottom, preferred default direction\n        if(titleTop  + itemsHeight <= viewPortHeight) {\n          this.yDir = 'down';\n        } else {\n\n          //theoretical itemsLeft if items are overlapping to the left:\n          let topValueIfItemsGoToTop = titleTop - itemsHeight;\n          let bottomValueIfItemsGoToBottom = titleBottom + itemsHeight;\n\n          //open in the direction where there is the most available space\n          if(topValueIfItemsGoToTop > bottomValueIfItemsGoToBottom - viewPortHeight) {\n            this.yDir = 'up';\n          } else {\n            this.yDir = 'down';\n          }\n        }\n      }\n    },\n    selectItem(ind) {\n      if(this.disabled) {\n        return;\n      }\n      if(ind >= 0 && this.items[ind]) {\n        this.selectedIndex = ind;\n        if(this.callback) {\n          this.callback(this.items[this.selectedIndex], ind);\n        }\n      }\n    },\n    prevItem() {\n      if(this.disabled) {\n        return;\n      }\n      if(typeof this.selectedIndex !== 'undefined') {\n        this.selectItem(this.selectedIndex-1);\n        this.scrollToSelected();\n      }\n    },\n    nextItem() {\n      if(this.disabled) {\n        return;\n      }\n      if(typeof this.selectedIndex === 'undefined') {\n        this.selectItem(0);\n        this.scrollToSelected();\n      } else {\n        this.selectItem(this.selectedIndex+1);\n        this.scrollToSelected();\n      }\n    },\n    getItemName(ind) {\n      if(this.nameProp && this.items[ind] && this.items[ind].hasOwnProperty(this.nameProp)) {\n        return this.items[ind][this.nameProp];\n      }\n      return this.items[ind];\n    },\n    scrollToSelected() {\n      let item = this.$refs.items[this.selectedIndex];\n      if(!item) {\n        return;\n      }\n\n      // the itemsHeight and itemsContHeight could also be cached, but well, there are no other expensive processes running in the background anyways\n      let itemBCR = item.getBoundingClientRect();\n      let itemsHeight = itemBCR.height; // all items have the same height\n\n      let itemTop = itemsHeight*(this.selectedIndex);\n      let itemBottom = itemsHeight*(this.selectedIndex+1);\n\n      let itemsCont = this.$refs.itemscontainer;\n      let itemsContHeight = itemsCont.getBoundingClientRect().height;\n\n      if(itemBottom < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n      if(itemTop > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom - itemsContHeight;\n      }\n      if(itemBottom > itemsCont.scrollTop + itemsContHeight) {\n        itemsCont.scrollTop = itemBottom-itemsContHeight;\n      }\n      if(itemTop < itemsCont.scrollTop) {\n        itemsCont.scrollTop = itemTop;\n      }\n\n    },\n    handleFocus() {\n    },\n    handleFocusOut() {\n      this.open = false;\n    }\n  },\n  watch: {\n    reset: function(newVal) {\n      if(newVal) {\n        this.selectedIndex = undefined;\n      }\n    },\n    selected: function(newVal) {\n      this.selectedIndex = newVal;\n    }\n  }\n}\n</script>\n\n<style>\n.drop-down {\n  position: relative;\n  display: inline-block;\n  -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n     -khtml-user-select: none; /* Konqueror HTML */\n       -moz-user-select: none; /* Firefox */\n        -ms-user-select: none; /* Internet Explorer/Edge */\n            user-select: none; /* Non-prefixed version, currently\n                                  supported by Chrome and Opera */\n}\n.drop-down.dd-disabled {\n  opacity: 0.5;\n  font-style: italic;\n}\n.drop-down-head {\n  position: relative;\n  overflow: hidden;\n}\n.drop-down-hidden-items {\n  visibility: hidden;\n  height: 0px;\n}\n.drop-down-icon {\n  position: absolute;\n  height: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n  right: -1px;\n}\n.drop-down-icon svg {\n  display: block;\n  height: 100%;\n}\n.drop-down-inner-container {\n  position: absolute;\n  min-width: 100%;\n  margin: 0px;\n  left: 0px;\n  background-color: white;\n}\n\n.drop-down-inner-container.dd-up { bottom: 100%;}\n.drop-down-inner-container.dd-down { top: 100%;}\n\n.drop-down-item {\n  white-space: nowrap;\n}\n\n.drop-down-item:hover {\n  background-color: lightgrey;\n}\n.drop-down-item.dd-selected {\n  background-color: grey;\n}\n\n.drop-down-items-container {\n  max-height: 250px;\n  overflow-y: auto;\n}\n\n</style>\n"],"sourceRoot":"src/lib"}]}
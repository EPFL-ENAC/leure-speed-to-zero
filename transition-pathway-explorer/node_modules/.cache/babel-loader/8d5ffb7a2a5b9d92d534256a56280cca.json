{"remainingRequest":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/src/components/LeverInfoWrapper.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/src/components/LeverInfoWrapper.vue","mtime":1707210098268},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PCalc/transition-pathway-explorer/node_modules/vue-loader/lib/index.js","mtime":1707234682968}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: 'LeverInfoWrapper',\n  props: ['leverId'],\n  data: function data() {\n    return {\n      componentInstance: undefined\n    };\n  },\n  methods: {\n    loadComponent: function loadComponent() {\n      var _this = this;\n      var fileName = this.leverId + '.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //componentInstance = () => import(`../content/${fileName}`)\n      import(\"./leverInfos/\".concat(fileName)).then(function () {\n        _this.componentInstance = function () {\n          return import(\"./leverInfos/\".concat(fileName));\n        };\n      }).catch(function () {\n        // console.log('component not found');\n      });\n    }\n  },\n  created: function created() {\n    this.componentInstance = this.loadComponent();\n  }\n};",{"version":3,"sources":["LeverInfoWrapper.vue"],"names":[],"mappings":";;;;;AAMA,eAAA;EACA,IAAA,EAAA,kBAAA;EACA,KAAA,EAAA,CAAA,SAAA,CAAA;EACA,IAAA,WAAA,KAAA,EAAA;IACA,OAAA;MACA,iBAAA,EAAA;IACA,CAAA;EACA,CAAA;EACA,OAAA,EAAA;IACA,aAAA,WAAA,cAAA,EAAA;MAAA,IAAA,KAAA;MACA,IAAA,QAAA,GAAA,IAAA,CAAA,OAAA,GAAA,MAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA,MAAA,iBAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CACA,IAAA,CAAA,YAAA;QACA,KAAA,CAAA,iBAAA,GAAA;UAAA,OAAA,MAAA,iBAAA,MAAA,CAAA,QAAA,CAAA,CAAA;QAAA;MACA,CAAA,CAAA,CACA,KAAA,CAAA,YAAA;QACA;MAAA,CACA,CAAA;IACA;EACA,CAAA;EACA,OAAA,WAAA,QAAA,EAAA;IACA,IAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,aAAA,CAAA,CAAA;EACA;AACA,CAAA","sourcesContent":["<template>\n  <component v-if=\"componentInstance\" :is=\"componentInstance\"/>\n</template>\n\n<script>\n\nexport default {\n  name: 'LeverInfoWrapper',\n  props: ['leverId'],\n  data() {\n    return {\n      componentInstance: undefined\n    }\n  },\n  methods: {\n    loadComponent() {\n      let fileName = this.leverId+'.vue';\n\n      //import() only works with partial paths, it doesn't take a single variable, like import(filePath). import() is not a function!! It just looks like one\n      //This rest is a bit hacky, but well.\n      //The first import() looks if the file exists, if not the error is silently caught.\n      //If it exists, a second import needs to be started because <component> cannot work directly with the answer of the\n      //first succesful fetch. It can only work with a function like this (for dynamic imports):\n      //componentInstance = () => import(`../content/${fileName}`)\n      import(`./leverInfos/${fileName}`)\n      .then(() => {\n        this.componentInstance = () => import(`./leverInfos/${fileName}`);\n      })\n      .catch(() => {\n        // console.log('component not found');\n      });\n    }\n  },\n  created() {\n    this.componentInstance = this.loadComponent();\n  }\n}\n</script>\n\n<style>\n#lever-info {\n  height: 100%;\n  box-sizing: border-box;\n  display: flex;\n  min-height: 0px;\n  flex-direction: column;\n  overflow: hidden;\n}\n#lever-info-title {\n  margin: 0px 0px 0px 0px;\n  padding: 10px 0px;\n  border-bottom: 2px solid lightgrey;\n}\n#lever-info-content {\n  padding: 10px 30px;\n  width: 100%;\n  box-sizing: border-box;\n  overflow-y: auto;\n}\n#lever-info h3 {\n  text-align: center;\n}\n#lever-img-dummy {\n  width: 300px;\n  height: 180px;\n  margin: 15px auto;\n  border: 1px solid lightgrey;\n}\n.lever-info-amibitions {\n  margin: 10px 0px;\n}\n.lever-info-amibitions p {\n  margin: 10px 15px 20px 15px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}
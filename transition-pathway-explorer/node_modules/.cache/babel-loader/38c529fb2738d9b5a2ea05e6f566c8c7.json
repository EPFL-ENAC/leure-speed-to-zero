{"remainingRequest":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/eslint-loader/index.js??ref--13-0!/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/inputsService.js","dependencies":[{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/inputsService.js","mtime":1707210098283},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/cache-loader/dist/cjs.js","mtime":1707234519865},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/babel-loader/lib/index.js","mtime":1707234519797},{"path":"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/eslint-loader/index.js","mtime":1707234519720}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _defineProperty from \"/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nimport Vue from \"vue\"; //vue.set() used with selected, maybe not necessary\nimport * as helpers from \"./helpers.js\";\nimport { appState } from \"./dataService.js\";\nimport { paramToValueMap, valueToParamMap } from \"./config/pathwayValueMap.js\";\nimport { ExamplePathways } from \"./config/examplePathways.js\";\n\n// lever data\nexport var leverSectors;\nexport var leverGroups; //reactive, used inside data() in Levers.vue\nexport var levers = {};\nexport var leverOrder = [];\nexport var highlightedLevers = {};\nexport var euOnlyLevers = [\"lever_bal-strat\", \"lever_str_charging\"]; // [\"lever_passenger_modal-share\"];\n\n// example-Pathways\nexport var examplePathways = ExamplePathways;\n\n// countries\nexport var countries; //does not contain \"EU\" entry\nexport var selected = []; // reactive\nexport var selectableCountries = [];\nvar defaultValues = {};\n\n// tooltips\nexport var tooltips = {};\n\n// onepagers\nexport var onepagers = {}; // content loaded asynchronously\n\nfunction initSingleLever(rawLever) {\n  var levObj = {\n    title: rawLever.title,\n    range: [],\n    type: rawLever.type ? rawLever.type : 'num' //'num' is the default type\n  };\n  if (rawLever.range) {\n    rawLever.range.forEach(function (step, index) {\n      levObj.range.push(index + 1);\n    });\n  } else {\n    levObj.range = [1, 2, 3, 4]; //default range\n  }\n\n  // set the isEUOnly flag if lever is eu-only-lever\n  if (euOnlyLevers.includes(rawLever.code)) {\n    levObj.isEUOnly = true;\n  }\n  levers[rawLever.code] = levObj;\n  leverOrder.push(rawLever.code);\n}\nexport function parseLeverData(data) {\n  // translates API lever response to the structure the front-end understands\n  var topGroups = [];\n  var groups = {};\n  data.forEach(function (lever) {\n    //sort in lever info\n    initSingleLever(lever);\n\n    //sort in group info\n    if (!groups[lever.group]) {\n      groups[lever.group] = {\n        title: lever.group,\n        levers: [lever.code],\n        deactivated: false\n      };\n    } else {\n      groups[lever.group].levers.push(lever.code);\n    }\n\n    //sort in topGroup info (leverSectors)\n    var topGroup;\n\n    //Array.find() not supported in IE\n    topGroups.some(function (tg, index) {\n      if (tg.headline === lever.headline) {\n        topGroup = topGroups[index];\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (!topGroup) {\n      topGroups.push({\n        headline: lever.headline,\n        groups: [lever.group]\n      });\n    } else {\n      //only add group once, skip if group is already present!\n      if (topGroup.groups.indexOf(lever.group) < 0) {\n        topGroup.groups.push(lever.group);\n      }\n    }\n  });\n\n  // console.log('parseLeverData ', levers);\n  initleverSectors(topGroups);\n  initleverGroups(groups);\n}\nfunction initleverSectors(sectors) {\n  leverSectors = sectors;\n}\nfunction initleverGroups(groups) {\n  leverGroups = groups;\n  Object.keys(leverGroups).forEach(function (groupId) {\n    // test if all ranges within that group are equal.\n    // If yes, the group get's its own range property which allows for a group-lever\n\n    var group = leverGroups[groupId];\n\n    //abort if the group doesn't have a title, then it's maximized and non-interactive by default\n    //basically it's not really visible then, but its content is\n    if (!group.title) {\n      return;\n    }\n    var range = levers[group.levers[0]].range.slice();\n    var equal = group.levers.every(function (levId) {\n      return helpers.arraysEqual(range, levers[levId].range.slice());\n    });\n    if (equal) {\n      group.range = range;\n      group.type = levers[group.levers[0]].type;\n    }\n    //minimize group by default\n    group.hidden = true;\n  });\n  console.log('initleverGroups ', leverGroups);\n}\nexport function initCountries(countrs) {\n  countries = countrs;\n  selectableCountries = [];\n  Object.keys(countrs).forEach(function (id) {\n    selectableCountries.push({\n      id: id,\n      name: countrs[id].name\n    });\n  });\n  //sort them alphabetically\n  selectableCountries.sort(function (a, b) {\n    if (a.name < b.name) {\n      return -1;\n    }\n    if (a.name > b.name) {\n      return 1;\n    }\n    return 0;\n  });\n  selected.push({\n    id: \"EU\",\n    name: \"France\",\n    values: _objectSpread({}, defaultValues)\n  });\n}\nexport function deactivateGroups(arrayOfGroupIds) {\n  arrayOfGroupIds.forEach(function (id) {\n    var group = leverGroups[id];\n    if (group) {\n      // \"deactivated\" is a reactive property\n      group.deactivated = true;\n    }\n  });\n}\nexport function activateAllGroups() {\n  Object.keys(leverGroups).forEach(function (id) {\n    // \"deactivated\" is a reactive property\n    leverGroups[id].deactivated = false;\n  });\n}\nexport function deactivateCountryZoom() {\n  appState.countryZoomDisabled = true;\n}\nexport function activateCountryZoom() {\n  appState.countryZoomDisabled = false;\n}\nexport function paramStringToPathway(paramString) {\n  // paramString needs to be a string\n  // returns an array of lever-settings [1,1.2,4,2,...]\n  // returns false if conversion fails (paramString invalid)\n\n  // console.log('paramStringToPathway ', paramString);\n  var pathwayString = paramString.split('');\n  var pathway = [];\n  pathwayString.forEach(function (character) {\n    //console.log('character ', character);\n    var value = paramToValueMap[character];\n    if (value) {\n      pathway.push(value);\n    }\n  });\n  if (pathway.length !== leverOrder.length) {\n    //console.log('paramStringToPathway ', pathway);\n    return false;\n  } else {\n    return pathway;\n  }\n}\nexport function pathwayObjectToParamString(pathwayObj) {\n  var paramString = '';\n  leverOrder.forEach(function (id) {\n    var val = pathwayObj[id];\n    var character = valueToParamMap[val];\n    if (character) {\n      paramString += character;\n    }\n  });\n  if (paramString.length !== leverOrder.length) {\n    console.log('length doesnt match ', paramString);\n    return ''; //returning empty string (falsy)\n  } else {\n    return paramString;\n  }\n}\nexport function setInputsFromURLParameters(euLeversString, otherLeversString, country_Code) {\n  // sets the inputs state according to the given parameters, falls back to the first example pathway if\n  // any of the parameters is not valid\n\n  console.log('setInputsFromURLParameters ', euLeversString, otherLeversString, countryCode);\n  var europePathway;\n  var countryPathway;\n  var countryCode;\n\n  // validating paramters\n  if (euLeversString) {\n    europePathway = paramStringToPathway(euLeversString);\n  }\n  if (otherLeversString && country_Code) {\n    countryCode = country_Code.trim().substring(0, 2).toUpperCase();\n    countryPathway = paramStringToPathway(otherLeversString);\n  }\n\n  // setting inputs state\n  if (europePathway) {\n    setPathway(europePathway, 'EU');\n  } else {\n    setExamplePathway(0);\n  }\n  if (isCountryCodeValid(countryCode) && countryPathway) {\n    setSelectedCountry(countryCode);\n    setPathway(countryPathway, countryCode);\n  } else {\n    unselectCountry();\n  }\n}\nexport function resetHighlightedLevers() {\n  Object.keys(highlightedLevers).forEach(function (key) {\n    Vue.delete(highlightedLevers, key);\n  });\n}\nexport function addToHighlightedLevers(levIds) {\n  levIds.forEach(function (id) {\n    Vue.set(highlightedLevers, id, true);\n  });\n}\nexport function isCountryCodeValid(code) {\n  return countries[code] && code !== \"EU\";\n}\nexport function unselectCountry() {\n  Vue.delete(selected, '1');\n  appState.countryZoomIndex = 0; // for outputs\n\n  if (appState.userAction.indexOf('countryChange') < 0) {\n    appState.userAction.push('countryChange');\n  }\n}\nexport function setSelectedCountry(id) {\n  //for now it only sets the second country with the EU values as initial values\n\n  //check if id exists!! Because this function is also called from route\n  if (!countries[id]) {\n    return;\n  }\n  Vue.set(selected, 1, {\n    id: id,\n    name: countries[id].name,\n    values: _objectSpread({}, selected[0].values) //JS spread syntax\n  });\n\n  // Some levers don't allow any changes on a single country-level, but just EU-values.\n  // Define a getter for each \"eu-values-only-lever\" that points to the EU-value of that lever\n  // this also triggers on routing and url-parameter values get corrected\n  // because during routing:\n  // 1. appState is set according to url-parameters\n  //    during that step the app-state is adapted if the parameters are invalid\n  //    or if levers are eu-only-values\n  // 2. at the end of the route process the querystring gets updated to the actual app-state\n  euOnlyLevers.forEach(function (leverId) {\n    Object.defineProperty(selected[1].values, leverId, {\n      get: function get() {\n        return selected[0].values[leverId];\n      }\n    });\n  });\n  if (appState.userAction.indexOf('countryChange') < 0) {\n    appState.userAction.push('countryChange');\n  }\n}\nexport function setExamplePathway(index) {\n  //sets the pathway for EU and for the selected country (if any)\n  var examplePathway = examplePathways[index];\n  if (!examplePathway) {\n    return;\n  }\n  console.log('setExamplePathway ', examplePathway.values);\n  selected.forEach(function (region) {\n    setPathway(examplePathway.values, region.id);\n  });\n  appState.pathwayIndex = index;\n}\nexport function setPathway(pathway, regionCode) {\n  // pathway: an array of numerical lever-settings in the order of the url-param, like: [1,1.1,2,1,...]\n  // TODO: return false if no region found or pathway has wrong format\n  var leversSettings = pathway;\n\n  //1. find region entry in selected\n  var regionIndex;\n  for (var i = 0, len = selected.length; i < len; i++) {\n    if (selected[i].id === regionCode) {\n      regionIndex = i;\n      break;\n    }\n  }\n  if (typeof regionIndex !== 'undefined') {\n    //regionIndex can be zero\n\n    var val;\n    var rangeMax;\n    leverOrder.forEach(function (id, ind) {\n      val = leversSettings[ind];\n      rangeMax = levers[id].range[levers[id].range.length - 1]; //the actual last entry\n      val = val > rangeMax ? rangeMax : val;\n      Vue.set(selected[regionIndex].values, id, val);\n    });\n    if (appState.userAction.indexOf('leverChange') < 0) {\n      appState.userAction.push('leverChange');\n    }\n  }\n}\nexport function checkIfLeversMatchExamplePathway() {\n  //checks for EU values AND selected country values (if any) matching any example pathway\n\n  var currEUValues = paramStringToPathway(pathwayObjectToParamString(selected[0].values));\n  var currSingleCountryValues;\n  if (selected[1]) {\n    currSingleCountryValues = paramStringToPathway(pathwayObjectToParamString(selected[1].values));\n  }\n  for (var i = 0, len = examplePathways.length; i < len; i++) {\n    if (helpers.arraysEqual(currEUValues, examplePathways[i].values)) {\n      if (currSingleCountryValues) {\n        if (helpers.arraysEqual(currSingleCountryValues, examplePathways[i].values)) {\n          appState.pathwayIndex = i;\n          return true;\n        }\n      } else {\n        appState.pathwayIndex = i;\n        return true;\n      }\n    }\n  }\n  // important, if pathway doesn't match an example pathway reset the pathwayIndex\n  appState.pathwayIndex = -1;\n  return false;\n}\nexport function setGroupValue(country, groupid, value) {\n  var group = leverGroups[groupid];\n  group.levers.forEach(function (levId) {\n    // make sure to ignore getter-functions (which can only be defined on non-EU values)\n    if (levers[levId].isEUOnly && country.id !== 'EU') {\n      return;\n    }\n    country.values[levId + ''] = value;\n  });\n  checkIfLeversMatchExamplePathway();\n  if (appState.userAction.indexOf('leverChange') < 0) {\n    appState.userAction.push('leverChange');\n  }\n}\nexport function setValue(country, leverid, value) {\n  // country is reactive, because it is part of selected!!\n  country.values[leverid + ''] = value;\n  checkIfLeversMatchExamplePathway();\n  if (appState.userAction.indexOf('leverChange') < 0) {\n    appState.userAction.push('leverChange');\n  }\n}\nexport function getLeversByRegion() {\n  var countryCodes = selected.map(function (region) {\n    return region.id;\n  });\n  var levsByRegion = {};\n  countryCodes.forEach(function (code) {\n    levsByRegion[code] = [];\n  });\n  leverOrder.forEach(function (leverId) {\n    countryCodes.forEach(function (code, countryIndex) {\n      var value = selected[countryIndex].values[leverId];\n      levsByRegion[code].push(value);\n    });\n  });\n  console.log('getLeversByRegion ', levsByRegion);\n  return levsByRegion;\n}\nexport function showInputInfo(leverId) {\n  appState.modalFor = leverId;\n}\nexport function hideInputInfo() {\n  appState.modalFor = undefined;\n}\nexport function parseTooltips(toolTipData) {\n  //adding\n  Object.keys(toolTipData).forEach(function (levrId) {\n    Vue.set(tooltips, levrId, toolTipData[levrId]);\n  });\n}",{"version":3,"names":["Vue","helpers","appState","paramToValueMap","valueToParamMap","ExamplePathways","leverSectors","leverGroups","levers","leverOrder","highlightedLevers","euOnlyLevers","examplePathways","countries","selected","selectableCountries","defaultValues","tooltips","onepagers","initSingleLever","rawLever","levObj","title","range","type","forEach","step","index","push","includes","code","isEUOnly","parseLeverData","data","topGroups","groups","lever","group","deactivated","topGroup","some","tg","headline","indexOf","initleverSectors","initleverGroups","sectors","Object","keys","groupId","slice","equal","every","levId","arraysEqual","hidden","console","log","initCountries","countrs","id","name","sort","a","b","values","_objectSpread","deactivateGroups","arrayOfGroupIds","activateAllGroups","deactivateCountryZoom","countryZoomDisabled","activateCountryZoom","paramStringToPathway","paramString","pathwayString","split","pathway","character","value","length","pathwayObjectToParamString","pathwayObj","val","setInputsFromURLParameters","euLeversString","otherLeversString","country_Code","countryCode","europePathway","countryPathway","trim","substring","toUpperCase","setPathway","setExamplePathway","isCountryCodeValid","setSelectedCountry","unselectCountry","resetHighlightedLevers","key","delete","addToHighlightedLevers","levIds","set","countryZoomIndex","userAction","leverId","defineProperty","get","examplePathway","region","pathwayIndex","regionCode","leversSettings","regionIndex","i","len","rangeMax","ind","checkIfLeversMatchExamplePathway","currEUValues","currSingleCountryValues","setGroupValue","country","groupid","setValue","leverid","getLeversByRegion","countryCodes","map","levsByRegion","countryIndex","showInputInfo","modalFor","hideInputInfo","undefined","parseTooltips","toolTipData","levrId"],"sources":["/Users/paruta/2050-Calculators/PathwayCalc/transition-pathway-explorer/src/inputsService.js"],"sourcesContent":["import Vue from \"vue\"; //vue.set() used with selected, maybe not necessary\nimport * as helpers from './helpers.js';\n\nimport {appState} from './dataService.js';\n\nimport {paramToValueMap, valueToParamMap} from './config/pathwayValueMap.js';\nimport {ExamplePathways} from './config/examplePathways.js';\n\n// lever data\nexport var leverSectors;\nexport var leverGroups;   //reactive, used inside data() in Levers.vue\nexport var levers = {};\nexport var leverOrder=[];\nexport var highlightedLevers = {};\nexport var euOnlyLevers = [\"lever_bal-strat\", \"lever_str_charging\"]; // [\"lever_passenger_modal-share\"];\n\n// example-Pathways\nexport var examplePathways = ExamplePathways;\n\n// countries\nexport var countries; //does not contain \"EU\" entry\nexport var selected = []; // reactive\nexport var selectableCountries = [];\n\nvar defaultValues = {};\n\n// tooltips\nexport var tooltips = {};\n\n// onepagers\nexport var onepagers = {}; // content loaded asynchronously\n\nfunction initSingleLever(rawLever) {\n\n  let levObj = {\n    title: rawLever.title,\n    range: [],\n    type: rawLever.type ? rawLever.type : 'num' //'num' is the default type\n  }\n  if(rawLever.range) {\n    rawLever.range.forEach((step, index) => {\n      levObj.range.push(index+1);\n    });\n  } else {\n    levObj.range = [1,2,3,4] //default range\n  }\n\n  // set the isEUOnly flag if lever is eu-only-lever\n  if(euOnlyLevers.includes(rawLever.code)) {\n    levObj.isEUOnly = true;\n  }\n\n  levers[rawLever.code] = levObj;\n  leverOrder.push(rawLever.code);\n}\n\nexport function parseLeverData(data) {\n  // translates API lever response to the structure the front-end understands\n  let topGroups = [];\n  let groups = {};\n\n  data.forEach((lever)=> {\n    //sort in lever info\n    initSingleLever(lever);\n\n    //sort in group info\n    if(!groups[lever.group]) {\n      groups[lever.group] = {\n        title: lever.group,\n        levers: [lever.code],\n        deactivated: false\n      };\n    } else {\n      groups[lever.group].levers.push(lever.code);\n    }\n\n    //sort in topGroup info (leverSectors)\n    let topGroup;\n\n    //Array.find() not supported in IE\n    topGroups.some((tg, index) => {\n      if(tg.headline === lever.headline) {\n        topGroup = topGroups[index];\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if(!topGroup) {\n      topGroups.push({\n        headline: lever.headline,\n        groups:[lever.group]\n      });\n    } else {\n      //only add group once, skip if group is already present!\n      if(topGroup.groups.indexOf(lever.group) < 0) {\n        topGroup.groups.push(lever.group);\n      }\n    }\n\n  });\n\n  // console.log('parseLeverData ', levers);\n  initleverSectors(topGroups);\n  initleverGroups(groups);\n}\n\nfunction initleverSectors(sectors) {\n  leverSectors = sectors;\n}\n\nfunction initleverGroups(groups) {\n  leverGroups = groups;\n\n  Object.keys(leverGroups).forEach(function(groupId) {\n\n    // test if all ranges within that group are equal.\n    // If yes, the group get's its own range property which allows for a group-lever\n\n    let group = leverGroups[groupId];\n\n    //abort if the group doesn't have a title, then it's maximized and non-interactive by default\n    //basically it's not really visible then, but its content is\n    if(!group.title) {\n      return;\n    }\n\n    let range = levers[group.levers[0]].range.slice();\n\n    let equal = group.levers.every(function(levId) {\n      return (helpers.arraysEqual(range,levers[levId].range.slice()));\n    });\n\n    if(equal) {\n      group.range = range;\n      group.type = levers[group.levers[0]].type;\n    }\n    //minimize group by default\n    group.hidden = true;\n  });\n  console.log('initleverGroups ', leverGroups);\n}\n\nexport function initCountries(countrs) {\n\n  countries = countrs;\n\n  selectableCountries = [];\n\n  Object.keys(countrs).forEach(function(id) {\n    selectableCountries.push({id: id, name: countrs[id].name});\n  });\n  //sort them alphabetically\n  selectableCountries.sort(function(a, b){\n    if(a.name < b.name) { return -1; }\n    if(a.name > b.name) { return 1; }\n    return 0;\n  })\n\n  selected.push( {\n    id: \"EU\",\n    name: \"France\",\n    values: {...defaultValues}\n  });\n}\n\nexport function deactivateGroups(arrayOfGroupIds) {\n  arrayOfGroupIds.forEach((id)=> {\n    let group = leverGroups[id];\n    if(group) {\n      // \"deactivated\" is a reactive property\n      group.deactivated = true;\n    }\n  });\n}\n\nexport function activateAllGroups() {\n  Object.keys(leverGroups).forEach((id)=> {\n    // \"deactivated\" is a reactive property\n    leverGroups[id].deactivated = false;\n  });\n}\n\nexport function deactivateCountryZoom() {\n  appState.countryZoomDisabled = true;\n}\n\nexport function activateCountryZoom() {\n  appState.countryZoomDisabled = false;\n}\n\nexport function paramStringToPathway(paramString) {\n  // paramString needs to be a string\n  // returns an array of lever-settings [1,1.2,4,2,...]\n  // returns false if conversion fails (paramString invalid)\n\n  // console.log('paramStringToPathway ', paramString);\n  let pathwayString = paramString.split('');\n  let pathway = [];\n\n  pathwayString.forEach((character) => {\n    //console.log('character ', character);\n    let value = paramToValueMap[character];\n    if(value) {\n      pathway.push(value);\n    }\n  });\n\n  if(pathway.length !== leverOrder.length) {\n    //console.log('paramStringToPathway ', pathway);\n    return false;\n  } else {\n    return pathway;\n  }\n\n}\n\nexport function pathwayObjectToParamString(pathwayObj) {\n\n  let paramString = '';\n  leverOrder.forEach((id) => {\n    let val = pathwayObj[id];\n    let character = valueToParamMap[val];\n    if(character) {\n      paramString += character;\n    }\n  });\n\n  if(paramString.length !== leverOrder.length) {\n    console.log('length doesnt match ', paramString)\n    return ''; //returning empty string (falsy)\n  } else {\n    return paramString;\n  }\n}\n\nexport function setInputsFromURLParameters(euLeversString, otherLeversString, country_Code) {\n  // sets the inputs state according to the given parameters, falls back to the first example pathway if\n  // any of the parameters is not valid\n\n  console.log('setInputsFromURLParameters ', euLeversString, otherLeversString, countryCode);\n  let europePathway;\n  let countryPathway;\n  let countryCode;\n\n  // validating paramters\n  if(euLeversString) {\n    europePathway = paramStringToPathway(euLeversString);\n  }\n  if(otherLeversString && country_Code) {\n    countryCode = country_Code.trim().substring(0,2).toUpperCase();\n    countryPathway = paramStringToPathway(otherLeversString);\n  }\n\n  // setting inputs state\n  if(europePathway) {\n    setPathway(europePathway, 'EU');\n  } else {\n    setExamplePathway(0);\n  }\n  if(isCountryCodeValid(countryCode) && countryPathway) {\n    setSelectedCountry(countryCode);\n    setPathway(countryPathway, countryCode);\n  } else {\n    unselectCountry();\n  }\n}\n\nexport function resetHighlightedLevers() {\n  Object.keys(highlightedLevers).forEach((key) => {\n    Vue.delete(highlightedLevers, key);\n  });\n}\n\nexport function addToHighlightedLevers(levIds) {\n  levIds.forEach((id)=> {\n    Vue.set(highlightedLevers, id, true);\n  });\n}\n\nexport function isCountryCodeValid(code) {\n  return countries[code] && code !== \"EU\";\n}\n\nexport function unselectCountry() {\n  Vue.delete(selected, '1');\n  appState.countryZoomIndex = 0; // for outputs\n\n  if(appState.userAction.indexOf('countryChange') < 0) {\n    appState.userAction.push('countryChange');\n  }\n}\n\nexport function setSelectedCountry(id) {\n  //for now it only sets the second country with the EU values as initial values\n\n  //check if id exists!! Because this function is also called from route\n  if(!countries[id]) {\n    return;\n  }\n\n  Vue.set(selected, 1, {\n    id: id,\n    name: countries[id].name,\n    values: {...selected[0].values} //JS spread syntax\n  });\n\n  // Some levers don't allow any changes on a single country-level, but just EU-values.\n  // Define a getter for each \"eu-values-only-lever\" that points to the EU-value of that lever\n  // this also triggers on routing and url-parameter values get corrected\n  // because during routing:\n  // 1. appState is set according to url-parameters\n  //    during that step the app-state is adapted if the parameters are invalid\n  //    or if levers are eu-only-values\n  // 2. at the end of the route process the querystring gets updated to the actual app-state\n  euOnlyLevers.forEach((leverId)=> {\n    Object.defineProperty(selected[1].values, leverId, {\n      get: function() {\n        return selected[0].values[leverId];\n      }\n    });\n  });\n\n  if(appState.userAction.indexOf('countryChange') < 0) {\n    appState.userAction.push('countryChange');\n  }\n\n}\n\nexport function setExamplePathway(index) {\n  //sets the pathway for EU and for the selected country (if any)\n  let examplePathway = examplePathways[index];\n  if(!examplePathway) {\n    return;\n  }\n  console.log('setExamplePathway ', examplePathway.values);\n  selected.forEach((region) => {\n    setPathway(examplePathway.values, region.id);\n  });\n\n  appState.pathwayIndex = index;\n}\n\nexport function setPathway(pathway, regionCode) {\n  // pathway: an array of numerical lever-settings in the order of the url-param, like: [1,1.1,2,1,...]\n  // TODO: return false if no region found or pathway has wrong format\n  let leversSettings = pathway;\n\n  //1. find region entry in selected\n  let regionIndex;\n  for(let i=0, len=selected.length; i<len; i++) {\n    if(selected[i].id === regionCode) {\n      regionIndex = i;\n      break;\n    }\n  }\n\n  if(typeof regionIndex !== 'undefined') { //regionIndex can be zero\n\n    let val;\n    let rangeMax;\n    leverOrder.forEach((id, ind) => {\n      val = leversSettings[ind];\n\n      rangeMax = levers[id].range[levers[id].range.length-1]; //the actual last entry\n      val = val > rangeMax ? rangeMax : val;\n\n      Vue.set(selected[regionIndex].values, id, val);\n    });\n\n    if(appState.userAction.indexOf('leverChange') < 0) {\n      appState.userAction.push('leverChange');\n    }\n  }\n}\n\nexport function checkIfLeversMatchExamplePathway() {\n  //checks for EU values AND selected country values (if any) matching any example pathway\n\n  let currEUValues = paramStringToPathway(pathwayObjectToParamString(selected[0].values));\n\n  let currSingleCountryValues;\n  if(selected[1]) {\n    currSingleCountryValues = paramStringToPathway(pathwayObjectToParamString(selected[1].values));\n  }\n\n  for(let i=0, len=examplePathways.length; i<len; i++) {\n    if(helpers.arraysEqual(currEUValues, examplePathways[i].values)) {\n      if(currSingleCountryValues) {\n        if(helpers.arraysEqual(currSingleCountryValues, examplePathways[i].values)) {\n          appState.pathwayIndex = i;\n          return true;\n        }\n      } else {\n        appState.pathwayIndex = i;\n        return true;\n      }\n    }\n  }\n  // important, if pathway doesn't match an example pathway reset the pathwayIndex\n  appState.pathwayIndex = -1;\n  return false;\n}\n\nexport function setGroupValue(country, groupid, value) {\n  let group = leverGroups[groupid];\n  group.levers.forEach(function(levId) {\n\n    // make sure to ignore getter-functions (which can only be defined on non-EU values)\n    if(levers[levId].isEUOnly && country.id !== 'EU') {\n      return;\n    }\n    country.values[levId+''] = value;\n  });\n\n  checkIfLeversMatchExamplePathway();\n\n  if(appState.userAction.indexOf('leverChange') < 0) {\n    appState.userAction.push('leverChange');\n  }\n}\n\nexport function setValue(country, leverid, value) {\n  // country is reactive, because it is part of selected!!\n  country.values[leverid+''] = value;\n\n  checkIfLeversMatchExamplePathway();\n\n  if(appState.userAction.indexOf('leverChange') < 0) {\n    appState.userAction.push('leverChange');\n  }\n}\n\n\nexport function getLeversByRegion() {\n  let countryCodes = selected.map((region) => region.id);\n\n  let levsByRegion = {};\n  countryCodes.forEach((code) => {\n    levsByRegion[code] = [];\n  });\n\n  leverOrder.forEach((leverId) => {\n    countryCodes.forEach((code, countryIndex) => {\n      let value = selected[countryIndex].values[leverId];\n      levsByRegion[code].push(value);\n    });\n  });\n\n  console.log('getLeversByRegion ', levsByRegion);\n  return levsByRegion;\n}\n\nexport function showInputInfo(leverId) {\n  appState.modalFor = leverId;\n}\n\nexport function hideInputInfo() {\n  appState.modalFor = undefined;\n}\n\nexport function parseTooltips(toolTipData) {\n  //adding\n  Object.keys(toolTipData).forEach((levrId) => {\n    Vue.set(tooltips, levrId, toolTipData[levrId]);\n  });\n}\n"],"mappings":"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"}]}
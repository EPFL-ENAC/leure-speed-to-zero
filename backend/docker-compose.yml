services:
  reverse-proxy:
    image: traefik:v2.10
    command:
      - "--providers.docker"
      - "--providers.file.directory=/configuration/"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    environment:
      - SSL_CERT_CRT=${SSL_CERT_CRT}
      - SSL_CERT_KEY=${SSL_CERT_KEY}
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/configuration/traefik.yml

  redis:
    image: redis:alpine
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: backend
    build:
      context: ./
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    labels:
      - "traefik.http.routers.backend.priority=1001"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8081"
      - "traefik.http.middlewares.backend-compress.compress=true"
      - "traefik.http.middlewares.backend-ratelimit.ratelimit.average=50"
      - "traefik.http.middlewares.backend-ratelimit.ratelimit.burst=25"
      - "traefik.http.middlewares.backend-ratelimit.ratelimit.period=1"
      - "traefik.http.middlewares.backend-strip.replacepathregex.regex=^/api/?(.*)"
      - "traefik.http.middlewares.backend-strip.replacepathregex.replacement=/$1"
      # Replace the custom Cache-Control with preserving cache headers
      - "traefik.http.middlewares.backend-cache.headers.customrequestheaders.If-None-Match={{.Request.Headers.Get \"If-None-Match\"}}"
      - "traefik.http.middlewares.backend-cache.headers.customrequestheaders.If-Modified-Since={{.Request.Headers.Get \"If-Modified-Since\"}}"
      - "traefik.http.middlewares.backend-cache.headers.addVaryHeader=true"
      - "traefik.http.routers.backend.middlewares=backend-compress,backend-ratelimit,backend-strip,backend-cache"
      - "traefik.http.routers.backend-docs.rule=PathPrefix(`/api/docs`)"
      - "traefik.http.routers.backend-docs.tls=true"
      - "traefik.http.routers.backend-docs.priority=1002"
      - "traefik.http.routers.backend-docs.service=backend"
      - "traefik.http.routers.backend-docs.middlewares=backend-compress,backend-ratelimit"
    expose:
      - 8081

volumes:
  redis_data: